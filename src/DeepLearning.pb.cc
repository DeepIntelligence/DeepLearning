// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DeepLearning.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DeepLearning.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DeepLearning {

namespace {

const ::google::protobuf::Descriptor* NeuralNetParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NeuralNetParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReinforcementLearningParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReinforcementLearningParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* LayerStructParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LayerStructParameter_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LayerStructParameter_ActivationType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RNNStructParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RNNStructParameter_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RNNStructParameter_ActivationType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* NeuralNetInitializerParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NeuralNetInitializerParameter_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* NeuralNetInitializerParameter_InitializerType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* NeuralNetTrainingParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NeuralNetTrainingParameter_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* NeuralNetTrainingParameter_TrainerType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* QLearningSolverParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QLearningSolverParameter_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_DeepLearning_2eproto() {
  protobuf_AddDesc_DeepLearning_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DeepLearning.proto");
  GOOGLE_CHECK(file != NULL);
  NeuralNetParameter_descriptor_ = file->message_type(0);
  static const int NeuralNetParameter_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetParameter, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetParameter, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetParameter, layerstruct_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetParameter, neuralnettrainingparameter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetParameter, rnnstruct_),
  };
  NeuralNetParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NeuralNetParameter_descriptor_,
      NeuralNetParameter::default_instance_,
      NeuralNetParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(NeuralNetParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetParameter, _internal_metadata_),
      -1);
  ReinforcementLearningParameter_descriptor_ = file->message_type(1);
  static const int ReinforcementLearningParameter_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReinforcementLearningParameter, qlearningsolverparameter_),
  };
  ReinforcementLearningParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReinforcementLearningParameter_descriptor_,
      ReinforcementLearningParameter::default_instance_,
      ReinforcementLearningParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReinforcementLearningParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReinforcementLearningParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReinforcementLearningParameter, _internal_metadata_),
      -1);
  LayerStructParameter_descriptor_ = file->message_type(2);
  static const int LayerStructParameter_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, inputdim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, outputdim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, activationtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, init_w_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, init_b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, init_w_one_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, init_w_two_),
  };
  LayerStructParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LayerStructParameter_descriptor_,
      LayerStructParameter::default_instance_,
      LayerStructParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(LayerStructParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerStructParameter, _internal_metadata_),
      -1);
  LayerStructParameter_ActivationType_descriptor_ = LayerStructParameter_descriptor_->enum_type(0);
  RNNStructParameter_descriptor_ = file->message_type(3);
  static const int RNNStructParameter_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, numhiddenlayers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, hiddenlayerinputdim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, hiddenlayeroutputdim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, inputdim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, outputdim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, activationtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, init_w_one_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, init_b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, init_w_two_),
  };
  RNNStructParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RNNStructParameter_descriptor_,
      RNNStructParameter::default_instance_,
      RNNStructParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(RNNStructParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RNNStructParameter, _internal_metadata_),
      -1);
  RNNStructParameter_ActivationType_descriptor_ = RNNStructParameter_descriptor_->enum_type(0);
  NeuralNetInitializerParameter_descriptor_ = file->message_type(4);
  static const int NeuralNetInitializerParameter_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetInitializerParameter, normal_std_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetInitializerParameter, normal_mean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetInitializerParameter, initializertype_),
  };
  NeuralNetInitializerParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NeuralNetInitializerParameter_descriptor_,
      NeuralNetInitializerParameter::default_instance_,
      NeuralNetInitializerParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetInitializerParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(NeuralNetInitializerParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetInitializerParameter, _internal_metadata_),
      -1);
  NeuralNetInitializerParameter_InitializerType_descriptor_ = NeuralNetInitializerParameter_descriptor_->enum_type(0);
  NeuralNetTrainingParameter_descriptor_ = file->message_type(5);
  static const int NeuralNetTrainingParameter_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, learningrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, maxiter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, minibatchsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, nepoch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, epi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, trainertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, decayrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, momentum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, verbose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, printinfofrequency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, clipflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, clipthreshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, rmsprop_rho_),
  };
  NeuralNetTrainingParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NeuralNetTrainingParameter_descriptor_,
      NeuralNetTrainingParameter::default_instance_,
      NeuralNetTrainingParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(NeuralNetTrainingParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeuralNetTrainingParameter, _internal_metadata_),
      -1);
  NeuralNetTrainingParameter_TrainerType_descriptor_ = NeuralNetTrainingParameter_descriptor_->enum_type(0);
  QLearningSolverParameter_descriptor_ = file->message_type(6);
  static const int QLearningSolverParameter_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLearningSolverParameter, numtrainingepisodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLearningSolverParameter, learningrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLearningSolverParameter, epsilon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLearningSolverParameter, episodelength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLearningSolverParameter, discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLearningSolverParameter, numepisodesbeforetraining_),
  };
  QLearningSolverParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QLearningSolverParameter_descriptor_,
      QLearningSolverParameter::default_instance_,
      QLearningSolverParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLearningSolverParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(QLearningSolverParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLearningSolverParameter, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DeepLearning_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NeuralNetParameter_descriptor_, &NeuralNetParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReinforcementLearningParameter_descriptor_, &ReinforcementLearningParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LayerStructParameter_descriptor_, &LayerStructParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RNNStructParameter_descriptor_, &RNNStructParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NeuralNetInitializerParameter_descriptor_, &NeuralNetInitializerParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NeuralNetTrainingParameter_descriptor_, &NeuralNetTrainingParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QLearningSolverParameter_descriptor_, &QLearningSolverParameter::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DeepLearning_2eproto() {
  delete NeuralNetParameter::default_instance_;
  delete NeuralNetParameter_reflection_;
  delete ReinforcementLearningParameter::default_instance_;
  delete ReinforcementLearningParameter_reflection_;
  delete LayerStructParameter::default_instance_;
  delete LayerStructParameter_reflection_;
  delete RNNStructParameter::default_instance_;
  delete RNNStructParameter_reflection_;
  delete NeuralNetInitializerParameter::default_instance_;
  delete NeuralNetInitializerParameter_reflection_;
  delete NeuralNetTrainingParameter::default_instance_;
  delete NeuralNetTrainingParameter_reflection_;
  delete QLearningSolverParameter::default_instance_;
  delete QLearningSolverParameter_reflection_;
}

void protobuf_AddDesc_DeepLearning_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022DeepLearning.proto\022\014DeepLearning\"\354\001\n\022N"
    "euralNetParameter\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030"
    "\002 \001(\t\0227\n\013layerStruct\030d \003(\0132\".DeepLearnin"
    "g.LayerStructParameter\022L\n\032neuralNetTrain"
    "ingParameter\030e \001(\0132(.DeepLearning.Neural"
    "NetTrainingParameter\0223\n\trnnStruct\030f \001(\0132"
    " .DeepLearning.RNNStructParameter\"j\n\036Rei"
    "nforcementLearningParameter\022H\n\030qLearning"
    "SolverParameter\030d \001(\0132&.DeepLearning.QLe"
    "arningSolverParameter\"\352\003\n\024LayerStructPar"
    "ameter\022\020\n\010inputDim\030\001 \001(\005\022\021\n\toutputDim\030\002 "
    "\001(\005\022I\n\016activationType\030\003 \001(\01621.DeepLearni"
    "ng.LayerStructParameter.ActivationType\022\014"
    "\n\004name\030\004 \001(\t\022\014\n\004type\030\005 \001(\t\022;\n\006init_W\030g \001"
    "(\0132+.DeepLearning.NeuralNetInitializerPa"
    "rameter\022;\n\006init_B\030h \001(\0132+.DeepLearning.N"
    "euralNetInitializerParameter\022\?\n\ninit_W_o"
    "ne\030i \001(\0132+.DeepLearning.NeuralNetInitial"
    "izerParameter\022\?\n\ninit_W_two\030j \001(\0132+.Deep"
    "Learning.NeuralNetInitializerParameter\"J"
    "\n\016ActivationType\022\013\n\007sigmoid\020\001\022\010\n\004tanh\020\002\022"
    "\n\n\006linear\020\003\022\013\n\007softmax\020\004\022\010\n\004ReLU\020\005\"\341\003\n\022R"
    "NNStructParameter\022\027\n\017numHiddenLayers\030\001 \001"
    "(\005\022\033\n\023hiddenLayerInputDim\030\002 \001(\005\022\034\n\024hidde"
    "nLayerOutputDim\030\003 \001(\005\022\020\n\010inputDim\030\004 \001(\005\022"
    "\021\n\toutputDim\030\005 \001(\005\022G\n\016activationType\030\006 \001"
    "(\0162/.DeepLearning.RNNStructParameter.Act"
    "ivationType\022\?\n\ninit_W_one\030g \001(\0132+.DeepLe"
    "arning.NeuralNetInitializerParameter\022;\n\006"
    "init_B\030h \001(\0132+.DeepLearning.NeuralNetIni"
    "tializerParameter\022\?\n\ninit_W_two\030i \001(\0132+."
    "DeepLearning.NeuralNetInitializerParamet"
    "er\"J\n\016ActivationType\022\013\n\007sigmoid\020\001\022\010\n\004tan"
    "h\020\002\022\n\n\006linear\020\003\022\013\n\007softmax\020\004\022\010\n\004ReLU\020\005\"\216"
    "\002\n\035NeuralNetInitializerParameter\022\022\n\nnorm"
    "al_std\030\001 \001(\001\022\023\n\013normal_mean\030\002 \001(\001\022T\n\017ini"
    "tializerType\030\003 \001(\0162;.DeepLearning.Neural"
    "NetInitializerParameter.InitializerType\""
    "n\n\017InitializerType\022\n\n\006custom\020\001\022\014\n\010identi"
    "ty\020\002\022\010\n\004zero\020\003\022\n\n\006normal\020\004\022\021\n\rglorot_nor"
    "mal\020\005\022\010\n\004IRNN\020\006\022\016\n\northogonal\020\007\"\260\003\n\032Neur"
    "alNetTrainingParameter\022\024\n\014learningRate\030\001"
    " \001(\001\022\017\n\007maxIter\030\002 \001(\005\022\025\n\rminiBatchSize\030\003"
    " \001(\005\022\016\n\006NEpoch\030\004 \001(\005\022\022\n\003epi\030\005 \001(\001:\0051e-06"
    "\022N\n\013trainerType\030\006 \001(\01624.DeepLearning.Neu"
    "ralNetTrainingParameter.TrainerType:\003SGD"
    "\022\025\n\tdecayRate\030\007 \001(\001:\00210\022\025\n\010momentum\030\010 \001("
    "\001:\0030.9\022\025\n\007verbose\030\t \001(\010:\004true\022\035\n\022printIn"
    "foFrequency\030\n \001(\005:\0011\022\027\n\010clipFlag\030\013 \001(\010:\005"
    "false\022\030\n\rclipThreshold\030\014 \001(\001:\0011\022\030\n\013RMSPr"
    "op_rho\030\r \001(\001:\0030.9\"/\n\013TrainerType\022\007\n\003SGD\020"
    "\001\022\013\n\007RMSProp\020\002\022\n\n\006SGDRNN\020\003\"\252\001\n\030QLearning"
    "SolverParameter\022\033\n\023numTrainingEpisodes\030\001"
    " \001(\005\022\024\n\014learningRate\030\002 \001(\001\022\017\n\007epsilon\030\003 "
    "\001(\001\022\025\n\rEpisodeLength\030\004 \001(\005\022\020\n\010discount\030\005"
    " \001(\001\022!\n\031numEpisodesBeforeTraining\030\006 \001(\005", 2239);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DeepLearning.proto", &protobuf_RegisterTypes);
  NeuralNetParameter::default_instance_ = new NeuralNetParameter();
  ReinforcementLearningParameter::default_instance_ = new ReinforcementLearningParameter();
  LayerStructParameter::default_instance_ = new LayerStructParameter();
  RNNStructParameter::default_instance_ = new RNNStructParameter();
  NeuralNetInitializerParameter::default_instance_ = new NeuralNetInitializerParameter();
  NeuralNetTrainingParameter::default_instance_ = new NeuralNetTrainingParameter();
  QLearningSolverParameter::default_instance_ = new QLearningSolverParameter();
  NeuralNetParameter::default_instance_->InitAsDefaultInstance();
  ReinforcementLearningParameter::default_instance_->InitAsDefaultInstance();
  LayerStructParameter::default_instance_->InitAsDefaultInstance();
  RNNStructParameter::default_instance_->InitAsDefaultInstance();
  NeuralNetInitializerParameter::default_instance_->InitAsDefaultInstance();
  NeuralNetTrainingParameter::default_instance_->InitAsDefaultInstance();
  QLearningSolverParameter::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DeepLearning_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DeepLearning_2eproto {
  StaticDescriptorInitializer_DeepLearning_2eproto() {
    protobuf_AddDesc_DeepLearning_2eproto();
  }
} static_descriptor_initializer_DeepLearning_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int NeuralNetParameter::kNameFieldNumber;
const int NeuralNetParameter::kTypeFieldNumber;
const int NeuralNetParameter::kLayerStructFieldNumber;
const int NeuralNetParameter::kNeuralNetTrainingParameterFieldNumber;
const int NeuralNetParameter::kRnnStructFieldNumber;
#endif  // !_MSC_VER

NeuralNetParameter::NeuralNetParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeepLearning.NeuralNetParameter)
}

void NeuralNetParameter::InitAsDefaultInstance() {
  neuralnettrainingparameter_ = const_cast< ::DeepLearning::NeuralNetTrainingParameter*>(&::DeepLearning::NeuralNetTrainingParameter::default_instance());
  rnnstruct_ = const_cast< ::DeepLearning::RNNStructParameter*>(&::DeepLearning::RNNStructParameter::default_instance());
}

NeuralNetParameter::NeuralNetParameter(const NeuralNetParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeepLearning.NeuralNetParameter)
}

void NeuralNetParameter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  neuralnettrainingparameter_ = NULL;
  rnnstruct_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NeuralNetParameter::~NeuralNetParameter() {
  // @@protoc_insertion_point(destructor:DeepLearning.NeuralNetParameter)
  SharedDtor();
}

void NeuralNetParameter::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete neuralnettrainingparameter_;
    delete rnnstruct_;
  }
}

void NeuralNetParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NeuralNetParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NeuralNetParameter_descriptor_;
}

const NeuralNetParameter& NeuralNetParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeepLearning_2eproto();
  return *default_instance_;
}

NeuralNetParameter* NeuralNetParameter::default_instance_ = NULL;

NeuralNetParameter* NeuralNetParameter::New(::google::protobuf::Arena* arena) const {
  NeuralNetParameter* n = new NeuralNetParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NeuralNetParameter::Clear() {
  if (_has_bits_[0 / 32] & 27u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_neuralnettrainingparameter()) {
      if (neuralnettrainingparameter_ != NULL) neuralnettrainingparameter_->::DeepLearning::NeuralNetTrainingParameter::Clear();
    }
    if (has_rnnstruct()) {
      if (rnnstruct_ != NULL) rnnstruct_->::DeepLearning::RNNStructParameter::Clear();
    }
  }
  layerstruct_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NeuralNetParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeepLearning.NeuralNetParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DeepLearning.NeuralNetParameter.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional string type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DeepLearning.NeuralNetParameter.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_layerStruct;
        break;
      }

      // repeated .DeepLearning.LayerStructParameter layerStruct = 100;
      case 100: {
        if (tag == 802) {
         parse_layerStruct:
          DO_(input->IncrementRecursionDepth());
         parse_loop_layerStruct:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_layerstruct()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_loop_layerStruct;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(810)) goto parse_neuralNetTrainingParameter;
        break;
      }

      // optional .DeepLearning.NeuralNetTrainingParameter neuralNetTrainingParameter = 101;
      case 101: {
        if (tag == 810) {
         parse_neuralNetTrainingParameter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_neuralnettrainingparameter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_rnnStruct;
        break;
      }

      // optional .DeepLearning.RNNStructParameter rnnStruct = 102;
      case 102: {
        if (tag == 818) {
         parse_rnnStruct:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rnnstruct()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeepLearning.NeuralNetParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeepLearning.NeuralNetParameter)
  return false;
#undef DO_
}

void NeuralNetParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeepLearning.NeuralNetParameter)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeepLearning.NeuralNetParameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeepLearning.NeuralNetParameter.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // repeated .DeepLearning.LayerStructParameter layerStruct = 100;
  for (unsigned int i = 0, n = this->layerstruct_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->layerstruct(i), output);
  }

  // optional .DeepLearning.NeuralNetTrainingParameter neuralNetTrainingParameter = 101;
  if (has_neuralnettrainingparameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *this->neuralnettrainingparameter_, output);
  }

  // optional .DeepLearning.RNNStructParameter rnnStruct = 102;
  if (has_rnnstruct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *this->rnnstruct_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeepLearning.NeuralNetParameter)
}

::google::protobuf::uint8* NeuralNetParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeepLearning.NeuralNetParameter)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeepLearning.NeuralNetParameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeepLearning.NeuralNetParameter.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // repeated .DeepLearning.LayerStructParameter layerStruct = 100;
  for (unsigned int i = 0, n = this->layerstruct_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->layerstruct(i), target);
  }

  // optional .DeepLearning.NeuralNetTrainingParameter neuralNetTrainingParameter = 101;
  if (has_neuralnettrainingparameter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        101, *this->neuralnettrainingparameter_, target);
  }

  // optional .DeepLearning.RNNStructParameter rnnStruct = 102;
  if (has_rnnstruct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        102, *this->rnnstruct_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeepLearning.NeuralNetParameter)
  return target;
}

int NeuralNetParameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 27) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional .DeepLearning.NeuralNetTrainingParameter neuralNetTrainingParameter = 101;
    if (has_neuralnettrainingparameter()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->neuralnettrainingparameter_);
    }

    // optional .DeepLearning.RNNStructParameter rnnStruct = 102;
    if (has_rnnstruct()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rnnstruct_);
    }

  }
  // repeated .DeepLearning.LayerStructParameter layerStruct = 100;
  total_size += 2 * this->layerstruct_size();
  for (int i = 0; i < this->layerstruct_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->layerstruct(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NeuralNetParameter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NeuralNetParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NeuralNetParameter>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NeuralNetParameter::MergeFrom(const NeuralNetParameter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  layerstruct_.MergeFrom(from.layerstruct_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_neuralnettrainingparameter()) {
      mutable_neuralnettrainingparameter()->::DeepLearning::NeuralNetTrainingParameter::MergeFrom(from.neuralnettrainingparameter());
    }
    if (from.has_rnnstruct()) {
      mutable_rnnstruct()->::DeepLearning::RNNStructParameter::MergeFrom(from.rnnstruct());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NeuralNetParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NeuralNetParameter::CopyFrom(const NeuralNetParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NeuralNetParameter::IsInitialized() const {

  return true;
}

void NeuralNetParameter::Swap(NeuralNetParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NeuralNetParameter::InternalSwap(NeuralNetParameter* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  layerstruct_.UnsafeArenaSwap(&other->layerstruct_);
  std::swap(neuralnettrainingparameter_, other->neuralnettrainingparameter_);
  std::swap(rnnstruct_, other->rnnstruct_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NeuralNetParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NeuralNetParameter_descriptor_;
  metadata.reflection = NeuralNetParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NeuralNetParameter

// optional string name = 1;
bool NeuralNetParameter::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NeuralNetParameter::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void NeuralNetParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void NeuralNetParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& NeuralNetParameter::name() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetParameter.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NeuralNetParameter::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetParameter.name)
}
 void NeuralNetParameter::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeepLearning.NeuralNetParameter.name)
}
 void NeuralNetParameter::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeepLearning.NeuralNetParameter.name)
}
 ::std::string* NeuralNetParameter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:DeepLearning.NeuralNetParameter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NeuralNetParameter::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NeuralNetParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.NeuralNetParameter.name)
}

// optional string type = 2;
bool NeuralNetParameter::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NeuralNetParameter::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void NeuralNetParameter::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void NeuralNetParameter::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
 const ::std::string& NeuralNetParameter::type() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetParameter.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NeuralNetParameter::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetParameter.type)
}
 void NeuralNetParameter::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeepLearning.NeuralNetParameter.type)
}
 void NeuralNetParameter::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeepLearning.NeuralNetParameter.type)
}
 ::std::string* NeuralNetParameter::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:DeepLearning.NeuralNetParameter.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NeuralNetParameter::release_type() {
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NeuralNetParameter::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.NeuralNetParameter.type)
}

// repeated .DeepLearning.LayerStructParameter layerStruct = 100;
int NeuralNetParameter::layerstruct_size() const {
  return layerstruct_.size();
}
void NeuralNetParameter::clear_layerstruct() {
  layerstruct_.Clear();
}
 const ::DeepLearning::LayerStructParameter& NeuralNetParameter::layerstruct(int index) const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetParameter.layerStruct)
  return layerstruct_.Get(index);
}
 ::DeepLearning::LayerStructParameter* NeuralNetParameter::mutable_layerstruct(int index) {
  // @@protoc_insertion_point(field_mutable:DeepLearning.NeuralNetParameter.layerStruct)
  return layerstruct_.Mutable(index);
}
 ::DeepLearning::LayerStructParameter* NeuralNetParameter::add_layerstruct() {
  // @@protoc_insertion_point(field_add:DeepLearning.NeuralNetParameter.layerStruct)
  return layerstruct_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::DeepLearning::LayerStructParameter >&
NeuralNetParameter::layerstruct() const {
  // @@protoc_insertion_point(field_list:DeepLearning.NeuralNetParameter.layerStruct)
  return layerstruct_;
}
 ::google::protobuf::RepeatedPtrField< ::DeepLearning::LayerStructParameter >*
NeuralNetParameter::mutable_layerstruct() {
  // @@protoc_insertion_point(field_mutable_list:DeepLearning.NeuralNetParameter.layerStruct)
  return &layerstruct_;
}

// optional .DeepLearning.NeuralNetTrainingParameter neuralNetTrainingParameter = 101;
bool NeuralNetParameter::has_neuralnettrainingparameter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NeuralNetParameter::set_has_neuralnettrainingparameter() {
  _has_bits_[0] |= 0x00000008u;
}
void NeuralNetParameter::clear_has_neuralnettrainingparameter() {
  _has_bits_[0] &= ~0x00000008u;
}
void NeuralNetParameter::clear_neuralnettrainingparameter() {
  if (neuralnettrainingparameter_ != NULL) neuralnettrainingparameter_->::DeepLearning::NeuralNetTrainingParameter::Clear();
  clear_has_neuralnettrainingparameter();
}
 const ::DeepLearning::NeuralNetTrainingParameter& NeuralNetParameter::neuralnettrainingparameter() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetParameter.neuralNetTrainingParameter)
  return neuralnettrainingparameter_ != NULL ? *neuralnettrainingparameter_ : *default_instance_->neuralnettrainingparameter_;
}
 ::DeepLearning::NeuralNetTrainingParameter* NeuralNetParameter::mutable_neuralnettrainingparameter() {
  set_has_neuralnettrainingparameter();
  if (neuralnettrainingparameter_ == NULL) {
    neuralnettrainingparameter_ = new ::DeepLearning::NeuralNetTrainingParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.NeuralNetParameter.neuralNetTrainingParameter)
  return neuralnettrainingparameter_;
}
 ::DeepLearning::NeuralNetTrainingParameter* NeuralNetParameter::release_neuralnettrainingparameter() {
  clear_has_neuralnettrainingparameter();
  ::DeepLearning::NeuralNetTrainingParameter* temp = neuralnettrainingparameter_;
  neuralnettrainingparameter_ = NULL;
  return temp;
}
 void NeuralNetParameter::set_allocated_neuralnettrainingparameter(::DeepLearning::NeuralNetTrainingParameter* neuralnettrainingparameter) {
  delete neuralnettrainingparameter_;
  neuralnettrainingparameter_ = neuralnettrainingparameter;
  if (neuralnettrainingparameter) {
    set_has_neuralnettrainingparameter();
  } else {
    clear_has_neuralnettrainingparameter();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.NeuralNetParameter.neuralNetTrainingParameter)
}

// optional .DeepLearning.RNNStructParameter rnnStruct = 102;
bool NeuralNetParameter::has_rnnstruct() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NeuralNetParameter::set_has_rnnstruct() {
  _has_bits_[0] |= 0x00000010u;
}
void NeuralNetParameter::clear_has_rnnstruct() {
  _has_bits_[0] &= ~0x00000010u;
}
void NeuralNetParameter::clear_rnnstruct() {
  if (rnnstruct_ != NULL) rnnstruct_->::DeepLearning::RNNStructParameter::Clear();
  clear_has_rnnstruct();
}
 const ::DeepLearning::RNNStructParameter& NeuralNetParameter::rnnstruct() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetParameter.rnnStruct)
  return rnnstruct_ != NULL ? *rnnstruct_ : *default_instance_->rnnstruct_;
}
 ::DeepLearning::RNNStructParameter* NeuralNetParameter::mutable_rnnstruct() {
  set_has_rnnstruct();
  if (rnnstruct_ == NULL) {
    rnnstruct_ = new ::DeepLearning::RNNStructParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.NeuralNetParameter.rnnStruct)
  return rnnstruct_;
}
 ::DeepLearning::RNNStructParameter* NeuralNetParameter::release_rnnstruct() {
  clear_has_rnnstruct();
  ::DeepLearning::RNNStructParameter* temp = rnnstruct_;
  rnnstruct_ = NULL;
  return temp;
}
 void NeuralNetParameter::set_allocated_rnnstruct(::DeepLearning::RNNStructParameter* rnnstruct) {
  delete rnnstruct_;
  rnnstruct_ = rnnstruct;
  if (rnnstruct) {
    set_has_rnnstruct();
  } else {
    clear_has_rnnstruct();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.NeuralNetParameter.rnnStruct)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ReinforcementLearningParameter::kQLearningSolverParameterFieldNumber;
#endif  // !_MSC_VER

ReinforcementLearningParameter::ReinforcementLearningParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeepLearning.ReinforcementLearningParameter)
}

void ReinforcementLearningParameter::InitAsDefaultInstance() {
  qlearningsolverparameter_ = const_cast< ::DeepLearning::QLearningSolverParameter*>(&::DeepLearning::QLearningSolverParameter::default_instance());
}

ReinforcementLearningParameter::ReinforcementLearningParameter(const ReinforcementLearningParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeepLearning.ReinforcementLearningParameter)
}

void ReinforcementLearningParameter::SharedCtor() {
  _cached_size_ = 0;
  qlearningsolverparameter_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReinforcementLearningParameter::~ReinforcementLearningParameter() {
  // @@protoc_insertion_point(destructor:DeepLearning.ReinforcementLearningParameter)
  SharedDtor();
}

void ReinforcementLearningParameter::SharedDtor() {
  if (this != default_instance_) {
    delete qlearningsolverparameter_;
  }
}

void ReinforcementLearningParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReinforcementLearningParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReinforcementLearningParameter_descriptor_;
}

const ReinforcementLearningParameter& ReinforcementLearningParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeepLearning_2eproto();
  return *default_instance_;
}

ReinforcementLearningParameter* ReinforcementLearningParameter::default_instance_ = NULL;

ReinforcementLearningParameter* ReinforcementLearningParameter::New(::google::protobuf::Arena* arena) const {
  ReinforcementLearningParameter* n = new ReinforcementLearningParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReinforcementLearningParameter::Clear() {
  if (has_qlearningsolverparameter()) {
    if (qlearningsolverparameter_ != NULL) qlearningsolverparameter_->::DeepLearning::QLearningSolverParameter::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReinforcementLearningParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeepLearning.ReinforcementLearningParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DeepLearning.QLearningSolverParameter qLearningSolverParameter = 100;
      case 100: {
        if (tag == 802) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_qlearningsolverparameter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeepLearning.ReinforcementLearningParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeepLearning.ReinforcementLearningParameter)
  return false;
#undef DO_
}

void ReinforcementLearningParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeepLearning.ReinforcementLearningParameter)
  // optional .DeepLearning.QLearningSolverParameter qLearningSolverParameter = 100;
  if (has_qlearningsolverparameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->qlearningsolverparameter_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeepLearning.ReinforcementLearningParameter)
}

::google::protobuf::uint8* ReinforcementLearningParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeepLearning.ReinforcementLearningParameter)
  // optional .DeepLearning.QLearningSolverParameter qLearningSolverParameter = 100;
  if (has_qlearningsolverparameter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, *this->qlearningsolverparameter_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeepLearning.ReinforcementLearningParameter)
  return target;
}

int ReinforcementLearningParameter::ByteSize() const {
  int total_size = 0;

  // optional .DeepLearning.QLearningSolverParameter qLearningSolverParameter = 100;
  if (has_qlearningsolverparameter()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->qlearningsolverparameter_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReinforcementLearningParameter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReinforcementLearningParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReinforcementLearningParameter>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReinforcementLearningParameter::MergeFrom(const ReinforcementLearningParameter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qlearningsolverparameter()) {
      mutable_qlearningsolverparameter()->::DeepLearning::QLearningSolverParameter::MergeFrom(from.qlearningsolverparameter());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReinforcementLearningParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReinforcementLearningParameter::CopyFrom(const ReinforcementLearningParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinforcementLearningParameter::IsInitialized() const {

  return true;
}

void ReinforcementLearningParameter::Swap(ReinforcementLearningParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReinforcementLearningParameter::InternalSwap(ReinforcementLearningParameter* other) {
  std::swap(qlearningsolverparameter_, other->qlearningsolverparameter_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReinforcementLearningParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReinforcementLearningParameter_descriptor_;
  metadata.reflection = ReinforcementLearningParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReinforcementLearningParameter

// optional .DeepLearning.QLearningSolverParameter qLearningSolverParameter = 100;
bool ReinforcementLearningParameter::has_qlearningsolverparameter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReinforcementLearningParameter::set_has_qlearningsolverparameter() {
  _has_bits_[0] |= 0x00000001u;
}
void ReinforcementLearningParameter::clear_has_qlearningsolverparameter() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReinforcementLearningParameter::clear_qlearningsolverparameter() {
  if (qlearningsolverparameter_ != NULL) qlearningsolverparameter_->::DeepLearning::QLearningSolverParameter::Clear();
  clear_has_qlearningsolverparameter();
}
 const ::DeepLearning::QLearningSolverParameter& ReinforcementLearningParameter::qlearningsolverparameter() const {
  // @@protoc_insertion_point(field_get:DeepLearning.ReinforcementLearningParameter.qLearningSolverParameter)
  return qlearningsolverparameter_ != NULL ? *qlearningsolverparameter_ : *default_instance_->qlearningsolverparameter_;
}
 ::DeepLearning::QLearningSolverParameter* ReinforcementLearningParameter::mutable_qlearningsolverparameter() {
  set_has_qlearningsolverparameter();
  if (qlearningsolverparameter_ == NULL) {
    qlearningsolverparameter_ = new ::DeepLearning::QLearningSolverParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.ReinforcementLearningParameter.qLearningSolverParameter)
  return qlearningsolverparameter_;
}
 ::DeepLearning::QLearningSolverParameter* ReinforcementLearningParameter::release_qlearningsolverparameter() {
  clear_has_qlearningsolverparameter();
  ::DeepLearning::QLearningSolverParameter* temp = qlearningsolverparameter_;
  qlearningsolverparameter_ = NULL;
  return temp;
}
 void ReinforcementLearningParameter::set_allocated_qlearningsolverparameter(::DeepLearning::QLearningSolverParameter* qlearningsolverparameter) {
  delete qlearningsolverparameter_;
  qlearningsolverparameter_ = qlearningsolverparameter;
  if (qlearningsolverparameter) {
    set_has_qlearningsolverparameter();
  } else {
    clear_has_qlearningsolverparameter();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.ReinforcementLearningParameter.qLearningSolverParameter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* LayerStructParameter_ActivationType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LayerStructParameter_ActivationType_descriptor_;
}
bool LayerStructParameter_ActivationType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const LayerStructParameter_ActivationType LayerStructParameter::sigmoid;
const LayerStructParameter_ActivationType LayerStructParameter::tanh;
const LayerStructParameter_ActivationType LayerStructParameter::linear;
const LayerStructParameter_ActivationType LayerStructParameter::softmax;
const LayerStructParameter_ActivationType LayerStructParameter::ReLU;
const LayerStructParameter_ActivationType LayerStructParameter::ActivationType_MIN;
const LayerStructParameter_ActivationType LayerStructParameter::ActivationType_MAX;
const int LayerStructParameter::ActivationType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int LayerStructParameter::kInputDimFieldNumber;
const int LayerStructParameter::kOutputDimFieldNumber;
const int LayerStructParameter::kActivationTypeFieldNumber;
const int LayerStructParameter::kNameFieldNumber;
const int LayerStructParameter::kTypeFieldNumber;
const int LayerStructParameter::kInitWFieldNumber;
const int LayerStructParameter::kInitBFieldNumber;
const int LayerStructParameter::kInitWOneFieldNumber;
const int LayerStructParameter::kInitWTwoFieldNumber;
#endif  // !_MSC_VER

LayerStructParameter::LayerStructParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeepLearning.LayerStructParameter)
}

void LayerStructParameter::InitAsDefaultInstance() {
  init_w_ = const_cast< ::DeepLearning::NeuralNetInitializerParameter*>(&::DeepLearning::NeuralNetInitializerParameter::default_instance());
  init_b_ = const_cast< ::DeepLearning::NeuralNetInitializerParameter*>(&::DeepLearning::NeuralNetInitializerParameter::default_instance());
  init_w_one_ = const_cast< ::DeepLearning::NeuralNetInitializerParameter*>(&::DeepLearning::NeuralNetInitializerParameter::default_instance());
  init_w_two_ = const_cast< ::DeepLearning::NeuralNetInitializerParameter*>(&::DeepLearning::NeuralNetInitializerParameter::default_instance());
}

LayerStructParameter::LayerStructParameter(const LayerStructParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeepLearning.LayerStructParameter)
}

void LayerStructParameter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  inputdim_ = 0;
  outputdim_ = 0;
  activationtype_ = 1;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_w_ = NULL;
  init_b_ = NULL;
  init_w_one_ = NULL;
  init_w_two_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LayerStructParameter::~LayerStructParameter() {
  // @@protoc_insertion_point(destructor:DeepLearning.LayerStructParameter)
  SharedDtor();
}

void LayerStructParameter::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete init_w_;
    delete init_b_;
    delete init_w_one_;
    delete init_w_two_;
  }
}

void LayerStructParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LayerStructParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LayerStructParameter_descriptor_;
}

const LayerStructParameter& LayerStructParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeepLearning_2eproto();
  return *default_instance_;
}

LayerStructParameter* LayerStructParameter::default_instance_ = NULL;

LayerStructParameter* LayerStructParameter::New(::google::protobuf::Arena* arena) const {
  LayerStructParameter* n = new LayerStructParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LayerStructParameter::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LayerStructParameter*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(inputdim_, outputdim_);
    activationtype_ = 1;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_init_w()) {
      if (init_w_ != NULL) init_w_->::DeepLearning::NeuralNetInitializerParameter::Clear();
    }
    if (has_init_b()) {
      if (init_b_ != NULL) init_b_->::DeepLearning::NeuralNetInitializerParameter::Clear();
    }
    if (has_init_w_one()) {
      if (init_w_one_ != NULL) init_w_one_->::DeepLearning::NeuralNetInitializerParameter::Clear();
    }
  }
  if (has_init_w_two()) {
    if (init_w_two_ != NULL) init_w_two_->::DeepLearning::NeuralNetInitializerParameter::Clear();
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LayerStructParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeepLearning.LayerStructParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 inputDim = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inputdim_)));
          set_has_inputdim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_outputDim;
        break;
      }

      // optional int32 outputDim = 2;
      case 2: {
        if (tag == 16) {
         parse_outputDim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &outputdim_)));
          set_has_outputdim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_activationType;
        break;
      }

      // optional .DeepLearning.LayerStructParameter.ActivationType activationType = 3;
      case 3: {
        if (tag == 24) {
         parse_activationType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DeepLearning::LayerStructParameter_ActivationType_IsValid(value)) {
            set_activationtype(static_cast< ::DeepLearning::LayerStructParameter_ActivationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DeepLearning.LayerStructParameter.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_type;
        break;
      }

      // optional string type = 5;
      case 5: {
        if (tag == 42) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DeepLearning.LayerStructParameter.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_init_W;
        break;
      }

      // optional .DeepLearning.NeuralNetInitializerParameter init_W = 103;
      case 103: {
        if (tag == 826) {
         parse_init_W:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_w()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(834)) goto parse_init_B;
        break;
      }

      // optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
      case 104: {
        if (tag == 834) {
         parse_init_B:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_b()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(842)) goto parse_init_W_one;
        break;
      }

      // optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 105;
      case 105: {
        if (tag == 842) {
         parse_init_W_one:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_w_one()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(850)) goto parse_init_W_two;
        break;
      }

      // optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 106;
      case 106: {
        if (tag == 850) {
         parse_init_W_two:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_w_two()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeepLearning.LayerStructParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeepLearning.LayerStructParameter)
  return false;
#undef DO_
}

void LayerStructParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeepLearning.LayerStructParameter)
  // optional int32 inputDim = 1;
  if (has_inputdim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->inputdim(), output);
  }

  // optional int32 outputDim = 2;
  if (has_outputdim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->outputdim(), output);
  }

  // optional .DeepLearning.LayerStructParameter.ActivationType activationType = 3;
  if (has_activationtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->activationtype(), output);
  }

  // optional string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeepLearning.LayerStructParameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional string type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeepLearning.LayerStructParameter.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->type(), output);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W = 103;
  if (has_init_w()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103, *this->init_w_, output);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
  if (has_init_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, *this->init_b_, output);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 105;
  if (has_init_w_one()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      105, *this->init_w_one_, output);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 106;
  if (has_init_w_two()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      106, *this->init_w_two_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeepLearning.LayerStructParameter)
}

::google::protobuf::uint8* LayerStructParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeepLearning.LayerStructParameter)
  // optional int32 inputDim = 1;
  if (has_inputdim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->inputdim(), target);
  }

  // optional int32 outputDim = 2;
  if (has_outputdim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->outputdim(), target);
  }

  // optional .DeepLearning.LayerStructParameter.ActivationType activationType = 3;
  if (has_activationtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->activationtype(), target);
  }

  // optional string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeepLearning.LayerStructParameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional string type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeepLearning.LayerStructParameter.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->type(), target);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W = 103;
  if (has_init_w()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        103, *this->init_w_, target);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
  if (has_init_b()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        104, *this->init_b_, target);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 105;
  if (has_init_w_one()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        105, *this->init_w_one_, target);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 106;
  if (has_init_w_two()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        106, *this->init_w_two_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeepLearning.LayerStructParameter)
  return target;
}

int LayerStructParameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 inputDim = 1;
    if (has_inputdim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inputdim());
    }

    // optional int32 outputDim = 2;
    if (has_outputdim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->outputdim());
    }

    // optional .DeepLearning.LayerStructParameter.ActivationType activationType = 3;
    if (has_activationtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->activationtype());
    }

    // optional string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional .DeepLearning.NeuralNetInitializerParameter init_W = 103;
    if (has_init_w()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->init_w_);
    }

    // optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
    if (has_init_b()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->init_b_);
    }

    // optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 105;
    if (has_init_w_one()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->init_w_one_);
    }

  }
  // optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 106;
  if (has_init_w_two()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->init_w_two_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LayerStructParameter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LayerStructParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LayerStructParameter>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LayerStructParameter::MergeFrom(const LayerStructParameter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_inputdim()) {
      set_inputdim(from.inputdim());
    }
    if (from.has_outputdim()) {
      set_outputdim(from.outputdim());
    }
    if (from.has_activationtype()) {
      set_activationtype(from.activationtype());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_init_w()) {
      mutable_init_w()->::DeepLearning::NeuralNetInitializerParameter::MergeFrom(from.init_w());
    }
    if (from.has_init_b()) {
      mutable_init_b()->::DeepLearning::NeuralNetInitializerParameter::MergeFrom(from.init_b());
    }
    if (from.has_init_w_one()) {
      mutable_init_w_one()->::DeepLearning::NeuralNetInitializerParameter::MergeFrom(from.init_w_one());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_init_w_two()) {
      mutable_init_w_two()->::DeepLearning::NeuralNetInitializerParameter::MergeFrom(from.init_w_two());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LayerStructParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerStructParameter::CopyFrom(const LayerStructParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerStructParameter::IsInitialized() const {

  return true;
}

void LayerStructParameter::Swap(LayerStructParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayerStructParameter::InternalSwap(LayerStructParameter* other) {
  std::swap(inputdim_, other->inputdim_);
  std::swap(outputdim_, other->outputdim_);
  std::swap(activationtype_, other->activationtype_);
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  std::swap(init_w_, other->init_w_);
  std::swap(init_b_, other->init_b_);
  std::swap(init_w_one_, other->init_w_one_);
  std::swap(init_w_two_, other->init_w_two_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LayerStructParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LayerStructParameter_descriptor_;
  metadata.reflection = LayerStructParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LayerStructParameter

// optional int32 inputDim = 1;
bool LayerStructParameter::has_inputdim() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LayerStructParameter::set_has_inputdim() {
  _has_bits_[0] |= 0x00000001u;
}
void LayerStructParameter::clear_has_inputdim() {
  _has_bits_[0] &= ~0x00000001u;
}
void LayerStructParameter::clear_inputdim() {
  inputdim_ = 0;
  clear_has_inputdim();
}
 ::google::protobuf::int32 LayerStructParameter::inputdim() const {
  // @@protoc_insertion_point(field_get:DeepLearning.LayerStructParameter.inputDim)
  return inputdim_;
}
 void LayerStructParameter::set_inputdim(::google::protobuf::int32 value) {
  set_has_inputdim();
  inputdim_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.LayerStructParameter.inputDim)
}

// optional int32 outputDim = 2;
bool LayerStructParameter::has_outputdim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LayerStructParameter::set_has_outputdim() {
  _has_bits_[0] |= 0x00000002u;
}
void LayerStructParameter::clear_has_outputdim() {
  _has_bits_[0] &= ~0x00000002u;
}
void LayerStructParameter::clear_outputdim() {
  outputdim_ = 0;
  clear_has_outputdim();
}
 ::google::protobuf::int32 LayerStructParameter::outputdim() const {
  // @@protoc_insertion_point(field_get:DeepLearning.LayerStructParameter.outputDim)
  return outputdim_;
}
 void LayerStructParameter::set_outputdim(::google::protobuf::int32 value) {
  set_has_outputdim();
  outputdim_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.LayerStructParameter.outputDim)
}

// optional .DeepLearning.LayerStructParameter.ActivationType activationType = 3;
bool LayerStructParameter::has_activationtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LayerStructParameter::set_has_activationtype() {
  _has_bits_[0] |= 0x00000004u;
}
void LayerStructParameter::clear_has_activationtype() {
  _has_bits_[0] &= ~0x00000004u;
}
void LayerStructParameter::clear_activationtype() {
  activationtype_ = 1;
  clear_has_activationtype();
}
 ::DeepLearning::LayerStructParameter_ActivationType LayerStructParameter::activationtype() const {
  // @@protoc_insertion_point(field_get:DeepLearning.LayerStructParameter.activationType)
  return static_cast< ::DeepLearning::LayerStructParameter_ActivationType >(activationtype_);
}
 void LayerStructParameter::set_activationtype(::DeepLearning::LayerStructParameter_ActivationType value) {
  assert(::DeepLearning::LayerStructParameter_ActivationType_IsValid(value));
  set_has_activationtype();
  activationtype_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.LayerStructParameter.activationType)
}

// optional string name = 4;
bool LayerStructParameter::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LayerStructParameter::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
void LayerStructParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void LayerStructParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& LayerStructParameter::name() const {
  // @@protoc_insertion_point(field_get:DeepLearning.LayerStructParameter.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LayerStructParameter::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeepLearning.LayerStructParameter.name)
}
 void LayerStructParameter::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeepLearning.LayerStructParameter.name)
}
 void LayerStructParameter::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeepLearning.LayerStructParameter.name)
}
 ::std::string* LayerStructParameter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:DeepLearning.LayerStructParameter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LayerStructParameter::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LayerStructParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.LayerStructParameter.name)
}

// optional string type = 5;
bool LayerStructParameter::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LayerStructParameter::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
void LayerStructParameter::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void LayerStructParameter::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
 const ::std::string& LayerStructParameter::type() const {
  // @@protoc_insertion_point(field_get:DeepLearning.LayerStructParameter.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LayerStructParameter::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeepLearning.LayerStructParameter.type)
}
 void LayerStructParameter::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeepLearning.LayerStructParameter.type)
}
 void LayerStructParameter::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeepLearning.LayerStructParameter.type)
}
 ::std::string* LayerStructParameter::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:DeepLearning.LayerStructParameter.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LayerStructParameter::release_type() {
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LayerStructParameter::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.LayerStructParameter.type)
}

// optional .DeepLearning.NeuralNetInitializerParameter init_W = 103;
bool LayerStructParameter::has_init_w() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LayerStructParameter::set_has_init_w() {
  _has_bits_[0] |= 0x00000020u;
}
void LayerStructParameter::clear_has_init_w() {
  _has_bits_[0] &= ~0x00000020u;
}
void LayerStructParameter::clear_init_w() {
  if (init_w_ != NULL) init_w_->::DeepLearning::NeuralNetInitializerParameter::Clear();
  clear_has_init_w();
}
 const ::DeepLearning::NeuralNetInitializerParameter& LayerStructParameter::init_w() const {
  // @@protoc_insertion_point(field_get:DeepLearning.LayerStructParameter.init_W)
  return init_w_ != NULL ? *init_w_ : *default_instance_->init_w_;
}
 ::DeepLearning::NeuralNetInitializerParameter* LayerStructParameter::mutable_init_w() {
  set_has_init_w();
  if (init_w_ == NULL) {
    init_w_ = new ::DeepLearning::NeuralNetInitializerParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.LayerStructParameter.init_W)
  return init_w_;
}
 ::DeepLearning::NeuralNetInitializerParameter* LayerStructParameter::release_init_w() {
  clear_has_init_w();
  ::DeepLearning::NeuralNetInitializerParameter* temp = init_w_;
  init_w_ = NULL;
  return temp;
}
 void LayerStructParameter::set_allocated_init_w(::DeepLearning::NeuralNetInitializerParameter* init_w) {
  delete init_w_;
  init_w_ = init_w;
  if (init_w) {
    set_has_init_w();
  } else {
    clear_has_init_w();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.LayerStructParameter.init_W)
}

// optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
bool LayerStructParameter::has_init_b() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LayerStructParameter::set_has_init_b() {
  _has_bits_[0] |= 0x00000040u;
}
void LayerStructParameter::clear_has_init_b() {
  _has_bits_[0] &= ~0x00000040u;
}
void LayerStructParameter::clear_init_b() {
  if (init_b_ != NULL) init_b_->::DeepLearning::NeuralNetInitializerParameter::Clear();
  clear_has_init_b();
}
 const ::DeepLearning::NeuralNetInitializerParameter& LayerStructParameter::init_b() const {
  // @@protoc_insertion_point(field_get:DeepLearning.LayerStructParameter.init_B)
  return init_b_ != NULL ? *init_b_ : *default_instance_->init_b_;
}
 ::DeepLearning::NeuralNetInitializerParameter* LayerStructParameter::mutable_init_b() {
  set_has_init_b();
  if (init_b_ == NULL) {
    init_b_ = new ::DeepLearning::NeuralNetInitializerParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.LayerStructParameter.init_B)
  return init_b_;
}
 ::DeepLearning::NeuralNetInitializerParameter* LayerStructParameter::release_init_b() {
  clear_has_init_b();
  ::DeepLearning::NeuralNetInitializerParameter* temp = init_b_;
  init_b_ = NULL;
  return temp;
}
 void LayerStructParameter::set_allocated_init_b(::DeepLearning::NeuralNetInitializerParameter* init_b) {
  delete init_b_;
  init_b_ = init_b;
  if (init_b) {
    set_has_init_b();
  } else {
    clear_has_init_b();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.LayerStructParameter.init_B)
}

// optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 105;
bool LayerStructParameter::has_init_w_one() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LayerStructParameter::set_has_init_w_one() {
  _has_bits_[0] |= 0x00000080u;
}
void LayerStructParameter::clear_has_init_w_one() {
  _has_bits_[0] &= ~0x00000080u;
}
void LayerStructParameter::clear_init_w_one() {
  if (init_w_one_ != NULL) init_w_one_->::DeepLearning::NeuralNetInitializerParameter::Clear();
  clear_has_init_w_one();
}
 const ::DeepLearning::NeuralNetInitializerParameter& LayerStructParameter::init_w_one() const {
  // @@protoc_insertion_point(field_get:DeepLearning.LayerStructParameter.init_W_one)
  return init_w_one_ != NULL ? *init_w_one_ : *default_instance_->init_w_one_;
}
 ::DeepLearning::NeuralNetInitializerParameter* LayerStructParameter::mutable_init_w_one() {
  set_has_init_w_one();
  if (init_w_one_ == NULL) {
    init_w_one_ = new ::DeepLearning::NeuralNetInitializerParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.LayerStructParameter.init_W_one)
  return init_w_one_;
}
 ::DeepLearning::NeuralNetInitializerParameter* LayerStructParameter::release_init_w_one() {
  clear_has_init_w_one();
  ::DeepLearning::NeuralNetInitializerParameter* temp = init_w_one_;
  init_w_one_ = NULL;
  return temp;
}
 void LayerStructParameter::set_allocated_init_w_one(::DeepLearning::NeuralNetInitializerParameter* init_w_one) {
  delete init_w_one_;
  init_w_one_ = init_w_one;
  if (init_w_one) {
    set_has_init_w_one();
  } else {
    clear_has_init_w_one();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.LayerStructParameter.init_W_one)
}

// optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 106;
bool LayerStructParameter::has_init_w_two() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void LayerStructParameter::set_has_init_w_two() {
  _has_bits_[0] |= 0x00000100u;
}
void LayerStructParameter::clear_has_init_w_two() {
  _has_bits_[0] &= ~0x00000100u;
}
void LayerStructParameter::clear_init_w_two() {
  if (init_w_two_ != NULL) init_w_two_->::DeepLearning::NeuralNetInitializerParameter::Clear();
  clear_has_init_w_two();
}
 const ::DeepLearning::NeuralNetInitializerParameter& LayerStructParameter::init_w_two() const {
  // @@protoc_insertion_point(field_get:DeepLearning.LayerStructParameter.init_W_two)
  return init_w_two_ != NULL ? *init_w_two_ : *default_instance_->init_w_two_;
}
 ::DeepLearning::NeuralNetInitializerParameter* LayerStructParameter::mutable_init_w_two() {
  set_has_init_w_two();
  if (init_w_two_ == NULL) {
    init_w_two_ = new ::DeepLearning::NeuralNetInitializerParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.LayerStructParameter.init_W_two)
  return init_w_two_;
}
 ::DeepLearning::NeuralNetInitializerParameter* LayerStructParameter::release_init_w_two() {
  clear_has_init_w_two();
  ::DeepLearning::NeuralNetInitializerParameter* temp = init_w_two_;
  init_w_two_ = NULL;
  return temp;
}
 void LayerStructParameter::set_allocated_init_w_two(::DeepLearning::NeuralNetInitializerParameter* init_w_two) {
  delete init_w_two_;
  init_w_two_ = init_w_two;
  if (init_w_two) {
    set_has_init_w_two();
  } else {
    clear_has_init_w_two();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.LayerStructParameter.init_W_two)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* RNNStructParameter_ActivationType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RNNStructParameter_ActivationType_descriptor_;
}
bool RNNStructParameter_ActivationType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const RNNStructParameter_ActivationType RNNStructParameter::sigmoid;
const RNNStructParameter_ActivationType RNNStructParameter::tanh;
const RNNStructParameter_ActivationType RNNStructParameter::linear;
const RNNStructParameter_ActivationType RNNStructParameter::softmax;
const RNNStructParameter_ActivationType RNNStructParameter::ReLU;
const RNNStructParameter_ActivationType RNNStructParameter::ActivationType_MIN;
const RNNStructParameter_ActivationType RNNStructParameter::ActivationType_MAX;
const int RNNStructParameter::ActivationType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int RNNStructParameter::kNumHiddenLayersFieldNumber;
const int RNNStructParameter::kHiddenLayerInputDimFieldNumber;
const int RNNStructParameter::kHiddenLayerOutputDimFieldNumber;
const int RNNStructParameter::kInputDimFieldNumber;
const int RNNStructParameter::kOutputDimFieldNumber;
const int RNNStructParameter::kActivationTypeFieldNumber;
const int RNNStructParameter::kInitWOneFieldNumber;
const int RNNStructParameter::kInitBFieldNumber;
const int RNNStructParameter::kInitWTwoFieldNumber;
#endif  // !_MSC_VER

RNNStructParameter::RNNStructParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeepLearning.RNNStructParameter)
}

void RNNStructParameter::InitAsDefaultInstance() {
  init_w_one_ = const_cast< ::DeepLearning::NeuralNetInitializerParameter*>(&::DeepLearning::NeuralNetInitializerParameter::default_instance());
  init_b_ = const_cast< ::DeepLearning::NeuralNetInitializerParameter*>(&::DeepLearning::NeuralNetInitializerParameter::default_instance());
  init_w_two_ = const_cast< ::DeepLearning::NeuralNetInitializerParameter*>(&::DeepLearning::NeuralNetInitializerParameter::default_instance());
}

RNNStructParameter::RNNStructParameter(const RNNStructParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeepLearning.RNNStructParameter)
}

void RNNStructParameter::SharedCtor() {
  _cached_size_ = 0;
  numhiddenlayers_ = 0;
  hiddenlayerinputdim_ = 0;
  hiddenlayeroutputdim_ = 0;
  inputdim_ = 0;
  outputdim_ = 0;
  activationtype_ = 1;
  init_w_one_ = NULL;
  init_b_ = NULL;
  init_w_two_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RNNStructParameter::~RNNStructParameter() {
  // @@protoc_insertion_point(destructor:DeepLearning.RNNStructParameter)
  SharedDtor();
}

void RNNStructParameter::SharedDtor() {
  if (this != default_instance_) {
    delete init_w_one_;
    delete init_b_;
    delete init_w_two_;
  }
}

void RNNStructParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RNNStructParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RNNStructParameter_descriptor_;
}

const RNNStructParameter& RNNStructParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeepLearning_2eproto();
  return *default_instance_;
}

RNNStructParameter* RNNStructParameter::default_instance_ = NULL;

RNNStructParameter* RNNStructParameter::New(::google::protobuf::Arena* arena) const {
  RNNStructParameter* n = new RNNStructParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RNNStructParameter::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RNNStructParameter*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(numhiddenlayers_, outputdim_);
    activationtype_ = 1;
    if (has_init_w_one()) {
      if (init_w_one_ != NULL) init_w_one_->::DeepLearning::NeuralNetInitializerParameter::Clear();
    }
    if (has_init_b()) {
      if (init_b_ != NULL) init_b_->::DeepLearning::NeuralNetInitializerParameter::Clear();
    }
  }
  if (has_init_w_two()) {
    if (init_w_two_ != NULL) init_w_two_->::DeepLearning::NeuralNetInitializerParameter::Clear();
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RNNStructParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeepLearning.RNNStructParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 numHiddenLayers = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numhiddenlayers_)));
          set_has_numhiddenlayers();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hiddenLayerInputDim;
        break;
      }

      // optional int32 hiddenLayerInputDim = 2;
      case 2: {
        if (tag == 16) {
         parse_hiddenLayerInputDim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hiddenlayerinputdim_)));
          set_has_hiddenlayerinputdim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hiddenLayerOutputDim;
        break;
      }

      // optional int32 hiddenLayerOutputDim = 3;
      case 3: {
        if (tag == 24) {
         parse_hiddenLayerOutputDim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hiddenlayeroutputdim_)));
          set_has_hiddenlayeroutputdim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_inputDim;
        break;
      }

      // optional int32 inputDim = 4;
      case 4: {
        if (tag == 32) {
         parse_inputDim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inputdim_)));
          set_has_inputdim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_outputDim;
        break;
      }

      // optional int32 outputDim = 5;
      case 5: {
        if (tag == 40) {
         parse_outputDim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &outputdim_)));
          set_has_outputdim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_activationType;
        break;
      }

      // optional .DeepLearning.RNNStructParameter.ActivationType activationType = 6;
      case 6: {
        if (tag == 48) {
         parse_activationType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DeepLearning::RNNStructParameter_ActivationType_IsValid(value)) {
            set_activationtype(static_cast< ::DeepLearning::RNNStructParameter_ActivationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_init_W_one;
        break;
      }

      // optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 103;
      case 103: {
        if (tag == 826) {
         parse_init_W_one:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_w_one()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(834)) goto parse_init_B;
        break;
      }

      // optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
      case 104: {
        if (tag == 834) {
         parse_init_B:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_b()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(842)) goto parse_init_W_two;
        break;
      }

      // optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 105;
      case 105: {
        if (tag == 842) {
         parse_init_W_two:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_w_two()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeepLearning.RNNStructParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeepLearning.RNNStructParameter)
  return false;
#undef DO_
}

void RNNStructParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeepLearning.RNNStructParameter)
  // optional int32 numHiddenLayers = 1;
  if (has_numhiddenlayers()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numhiddenlayers(), output);
  }

  // optional int32 hiddenLayerInputDim = 2;
  if (has_hiddenlayerinputdim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hiddenlayerinputdim(), output);
  }

  // optional int32 hiddenLayerOutputDim = 3;
  if (has_hiddenlayeroutputdim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hiddenlayeroutputdim(), output);
  }

  // optional int32 inputDim = 4;
  if (has_inputdim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->inputdim(), output);
  }

  // optional int32 outputDim = 5;
  if (has_outputdim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->outputdim(), output);
  }

  // optional .DeepLearning.RNNStructParameter.ActivationType activationType = 6;
  if (has_activationtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->activationtype(), output);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 103;
  if (has_init_w_one()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103, *this->init_w_one_, output);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
  if (has_init_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, *this->init_b_, output);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 105;
  if (has_init_w_two()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      105, *this->init_w_two_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeepLearning.RNNStructParameter)
}

::google::protobuf::uint8* RNNStructParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeepLearning.RNNStructParameter)
  // optional int32 numHiddenLayers = 1;
  if (has_numhiddenlayers()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->numhiddenlayers(), target);
  }

  // optional int32 hiddenLayerInputDim = 2;
  if (has_hiddenlayerinputdim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hiddenlayerinputdim(), target);
  }

  // optional int32 hiddenLayerOutputDim = 3;
  if (has_hiddenlayeroutputdim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hiddenlayeroutputdim(), target);
  }

  // optional int32 inputDim = 4;
  if (has_inputdim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->inputdim(), target);
  }

  // optional int32 outputDim = 5;
  if (has_outputdim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->outputdim(), target);
  }

  // optional .DeepLearning.RNNStructParameter.ActivationType activationType = 6;
  if (has_activationtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->activationtype(), target);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 103;
  if (has_init_w_one()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        103, *this->init_w_one_, target);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
  if (has_init_b()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        104, *this->init_b_, target);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 105;
  if (has_init_w_two()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        105, *this->init_w_two_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeepLearning.RNNStructParameter)
  return target;
}

int RNNStructParameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 numHiddenLayers = 1;
    if (has_numhiddenlayers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numhiddenlayers());
    }

    // optional int32 hiddenLayerInputDim = 2;
    if (has_hiddenlayerinputdim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hiddenlayerinputdim());
    }

    // optional int32 hiddenLayerOutputDim = 3;
    if (has_hiddenlayeroutputdim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hiddenlayeroutputdim());
    }

    // optional int32 inputDim = 4;
    if (has_inputdim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inputdim());
    }

    // optional int32 outputDim = 5;
    if (has_outputdim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->outputdim());
    }

    // optional .DeepLearning.RNNStructParameter.ActivationType activationType = 6;
    if (has_activationtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->activationtype());
    }

    // optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 103;
    if (has_init_w_one()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->init_w_one_);
    }

    // optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
    if (has_init_b()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->init_b_);
    }

  }
  // optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 105;
  if (has_init_w_two()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->init_w_two_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RNNStructParameter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RNNStructParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RNNStructParameter>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RNNStructParameter::MergeFrom(const RNNStructParameter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numhiddenlayers()) {
      set_numhiddenlayers(from.numhiddenlayers());
    }
    if (from.has_hiddenlayerinputdim()) {
      set_hiddenlayerinputdim(from.hiddenlayerinputdim());
    }
    if (from.has_hiddenlayeroutputdim()) {
      set_hiddenlayeroutputdim(from.hiddenlayeroutputdim());
    }
    if (from.has_inputdim()) {
      set_inputdim(from.inputdim());
    }
    if (from.has_outputdim()) {
      set_outputdim(from.outputdim());
    }
    if (from.has_activationtype()) {
      set_activationtype(from.activationtype());
    }
    if (from.has_init_w_one()) {
      mutable_init_w_one()->::DeepLearning::NeuralNetInitializerParameter::MergeFrom(from.init_w_one());
    }
    if (from.has_init_b()) {
      mutable_init_b()->::DeepLearning::NeuralNetInitializerParameter::MergeFrom(from.init_b());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_init_w_two()) {
      mutable_init_w_two()->::DeepLearning::NeuralNetInitializerParameter::MergeFrom(from.init_w_two());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RNNStructParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RNNStructParameter::CopyFrom(const RNNStructParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RNNStructParameter::IsInitialized() const {

  return true;
}

void RNNStructParameter::Swap(RNNStructParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RNNStructParameter::InternalSwap(RNNStructParameter* other) {
  std::swap(numhiddenlayers_, other->numhiddenlayers_);
  std::swap(hiddenlayerinputdim_, other->hiddenlayerinputdim_);
  std::swap(hiddenlayeroutputdim_, other->hiddenlayeroutputdim_);
  std::swap(inputdim_, other->inputdim_);
  std::swap(outputdim_, other->outputdim_);
  std::swap(activationtype_, other->activationtype_);
  std::swap(init_w_one_, other->init_w_one_);
  std::swap(init_b_, other->init_b_);
  std::swap(init_w_two_, other->init_w_two_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RNNStructParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RNNStructParameter_descriptor_;
  metadata.reflection = RNNStructParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RNNStructParameter

// optional int32 numHiddenLayers = 1;
bool RNNStructParameter::has_numhiddenlayers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RNNStructParameter::set_has_numhiddenlayers() {
  _has_bits_[0] |= 0x00000001u;
}
void RNNStructParameter::clear_has_numhiddenlayers() {
  _has_bits_[0] &= ~0x00000001u;
}
void RNNStructParameter::clear_numhiddenlayers() {
  numhiddenlayers_ = 0;
  clear_has_numhiddenlayers();
}
 ::google::protobuf::int32 RNNStructParameter::numhiddenlayers() const {
  // @@protoc_insertion_point(field_get:DeepLearning.RNNStructParameter.numHiddenLayers)
  return numhiddenlayers_;
}
 void RNNStructParameter::set_numhiddenlayers(::google::protobuf::int32 value) {
  set_has_numhiddenlayers();
  numhiddenlayers_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.RNNStructParameter.numHiddenLayers)
}

// optional int32 hiddenLayerInputDim = 2;
bool RNNStructParameter::has_hiddenlayerinputdim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RNNStructParameter::set_has_hiddenlayerinputdim() {
  _has_bits_[0] |= 0x00000002u;
}
void RNNStructParameter::clear_has_hiddenlayerinputdim() {
  _has_bits_[0] &= ~0x00000002u;
}
void RNNStructParameter::clear_hiddenlayerinputdim() {
  hiddenlayerinputdim_ = 0;
  clear_has_hiddenlayerinputdim();
}
 ::google::protobuf::int32 RNNStructParameter::hiddenlayerinputdim() const {
  // @@protoc_insertion_point(field_get:DeepLearning.RNNStructParameter.hiddenLayerInputDim)
  return hiddenlayerinputdim_;
}
 void RNNStructParameter::set_hiddenlayerinputdim(::google::protobuf::int32 value) {
  set_has_hiddenlayerinputdim();
  hiddenlayerinputdim_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.RNNStructParameter.hiddenLayerInputDim)
}

// optional int32 hiddenLayerOutputDim = 3;
bool RNNStructParameter::has_hiddenlayeroutputdim() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RNNStructParameter::set_has_hiddenlayeroutputdim() {
  _has_bits_[0] |= 0x00000004u;
}
void RNNStructParameter::clear_has_hiddenlayeroutputdim() {
  _has_bits_[0] &= ~0x00000004u;
}
void RNNStructParameter::clear_hiddenlayeroutputdim() {
  hiddenlayeroutputdim_ = 0;
  clear_has_hiddenlayeroutputdim();
}
 ::google::protobuf::int32 RNNStructParameter::hiddenlayeroutputdim() const {
  // @@protoc_insertion_point(field_get:DeepLearning.RNNStructParameter.hiddenLayerOutputDim)
  return hiddenlayeroutputdim_;
}
 void RNNStructParameter::set_hiddenlayeroutputdim(::google::protobuf::int32 value) {
  set_has_hiddenlayeroutputdim();
  hiddenlayeroutputdim_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.RNNStructParameter.hiddenLayerOutputDim)
}

// optional int32 inputDim = 4;
bool RNNStructParameter::has_inputdim() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RNNStructParameter::set_has_inputdim() {
  _has_bits_[0] |= 0x00000008u;
}
void RNNStructParameter::clear_has_inputdim() {
  _has_bits_[0] &= ~0x00000008u;
}
void RNNStructParameter::clear_inputdim() {
  inputdim_ = 0;
  clear_has_inputdim();
}
 ::google::protobuf::int32 RNNStructParameter::inputdim() const {
  // @@protoc_insertion_point(field_get:DeepLearning.RNNStructParameter.inputDim)
  return inputdim_;
}
 void RNNStructParameter::set_inputdim(::google::protobuf::int32 value) {
  set_has_inputdim();
  inputdim_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.RNNStructParameter.inputDim)
}

// optional int32 outputDim = 5;
bool RNNStructParameter::has_outputdim() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RNNStructParameter::set_has_outputdim() {
  _has_bits_[0] |= 0x00000010u;
}
void RNNStructParameter::clear_has_outputdim() {
  _has_bits_[0] &= ~0x00000010u;
}
void RNNStructParameter::clear_outputdim() {
  outputdim_ = 0;
  clear_has_outputdim();
}
 ::google::protobuf::int32 RNNStructParameter::outputdim() const {
  // @@protoc_insertion_point(field_get:DeepLearning.RNNStructParameter.outputDim)
  return outputdim_;
}
 void RNNStructParameter::set_outputdim(::google::protobuf::int32 value) {
  set_has_outputdim();
  outputdim_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.RNNStructParameter.outputDim)
}

// optional .DeepLearning.RNNStructParameter.ActivationType activationType = 6;
bool RNNStructParameter::has_activationtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RNNStructParameter::set_has_activationtype() {
  _has_bits_[0] |= 0x00000020u;
}
void RNNStructParameter::clear_has_activationtype() {
  _has_bits_[0] &= ~0x00000020u;
}
void RNNStructParameter::clear_activationtype() {
  activationtype_ = 1;
  clear_has_activationtype();
}
 ::DeepLearning::RNNStructParameter_ActivationType RNNStructParameter::activationtype() const {
  // @@protoc_insertion_point(field_get:DeepLearning.RNNStructParameter.activationType)
  return static_cast< ::DeepLearning::RNNStructParameter_ActivationType >(activationtype_);
}
 void RNNStructParameter::set_activationtype(::DeepLearning::RNNStructParameter_ActivationType value) {
  assert(::DeepLearning::RNNStructParameter_ActivationType_IsValid(value));
  set_has_activationtype();
  activationtype_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.RNNStructParameter.activationType)
}

// optional .DeepLearning.NeuralNetInitializerParameter init_W_one = 103;
bool RNNStructParameter::has_init_w_one() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RNNStructParameter::set_has_init_w_one() {
  _has_bits_[0] |= 0x00000040u;
}
void RNNStructParameter::clear_has_init_w_one() {
  _has_bits_[0] &= ~0x00000040u;
}
void RNNStructParameter::clear_init_w_one() {
  if (init_w_one_ != NULL) init_w_one_->::DeepLearning::NeuralNetInitializerParameter::Clear();
  clear_has_init_w_one();
}
 const ::DeepLearning::NeuralNetInitializerParameter& RNNStructParameter::init_w_one() const {
  // @@protoc_insertion_point(field_get:DeepLearning.RNNStructParameter.init_W_one)
  return init_w_one_ != NULL ? *init_w_one_ : *default_instance_->init_w_one_;
}
 ::DeepLearning::NeuralNetInitializerParameter* RNNStructParameter::mutable_init_w_one() {
  set_has_init_w_one();
  if (init_w_one_ == NULL) {
    init_w_one_ = new ::DeepLearning::NeuralNetInitializerParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.RNNStructParameter.init_W_one)
  return init_w_one_;
}
 ::DeepLearning::NeuralNetInitializerParameter* RNNStructParameter::release_init_w_one() {
  clear_has_init_w_one();
  ::DeepLearning::NeuralNetInitializerParameter* temp = init_w_one_;
  init_w_one_ = NULL;
  return temp;
}
 void RNNStructParameter::set_allocated_init_w_one(::DeepLearning::NeuralNetInitializerParameter* init_w_one) {
  delete init_w_one_;
  init_w_one_ = init_w_one;
  if (init_w_one) {
    set_has_init_w_one();
  } else {
    clear_has_init_w_one();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.RNNStructParameter.init_W_one)
}

// optional .DeepLearning.NeuralNetInitializerParameter init_B = 104;
bool RNNStructParameter::has_init_b() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RNNStructParameter::set_has_init_b() {
  _has_bits_[0] |= 0x00000080u;
}
void RNNStructParameter::clear_has_init_b() {
  _has_bits_[0] &= ~0x00000080u;
}
void RNNStructParameter::clear_init_b() {
  if (init_b_ != NULL) init_b_->::DeepLearning::NeuralNetInitializerParameter::Clear();
  clear_has_init_b();
}
 const ::DeepLearning::NeuralNetInitializerParameter& RNNStructParameter::init_b() const {
  // @@protoc_insertion_point(field_get:DeepLearning.RNNStructParameter.init_B)
  return init_b_ != NULL ? *init_b_ : *default_instance_->init_b_;
}
 ::DeepLearning::NeuralNetInitializerParameter* RNNStructParameter::mutable_init_b() {
  set_has_init_b();
  if (init_b_ == NULL) {
    init_b_ = new ::DeepLearning::NeuralNetInitializerParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.RNNStructParameter.init_B)
  return init_b_;
}
 ::DeepLearning::NeuralNetInitializerParameter* RNNStructParameter::release_init_b() {
  clear_has_init_b();
  ::DeepLearning::NeuralNetInitializerParameter* temp = init_b_;
  init_b_ = NULL;
  return temp;
}
 void RNNStructParameter::set_allocated_init_b(::DeepLearning::NeuralNetInitializerParameter* init_b) {
  delete init_b_;
  init_b_ = init_b;
  if (init_b) {
    set_has_init_b();
  } else {
    clear_has_init_b();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.RNNStructParameter.init_B)
}

// optional .DeepLearning.NeuralNetInitializerParameter init_W_two = 105;
bool RNNStructParameter::has_init_w_two() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RNNStructParameter::set_has_init_w_two() {
  _has_bits_[0] |= 0x00000100u;
}
void RNNStructParameter::clear_has_init_w_two() {
  _has_bits_[0] &= ~0x00000100u;
}
void RNNStructParameter::clear_init_w_two() {
  if (init_w_two_ != NULL) init_w_two_->::DeepLearning::NeuralNetInitializerParameter::Clear();
  clear_has_init_w_two();
}
 const ::DeepLearning::NeuralNetInitializerParameter& RNNStructParameter::init_w_two() const {
  // @@protoc_insertion_point(field_get:DeepLearning.RNNStructParameter.init_W_two)
  return init_w_two_ != NULL ? *init_w_two_ : *default_instance_->init_w_two_;
}
 ::DeepLearning::NeuralNetInitializerParameter* RNNStructParameter::mutable_init_w_two() {
  set_has_init_w_two();
  if (init_w_two_ == NULL) {
    init_w_two_ = new ::DeepLearning::NeuralNetInitializerParameter;
  }
  // @@protoc_insertion_point(field_mutable:DeepLearning.RNNStructParameter.init_W_two)
  return init_w_two_;
}
 ::DeepLearning::NeuralNetInitializerParameter* RNNStructParameter::release_init_w_two() {
  clear_has_init_w_two();
  ::DeepLearning::NeuralNetInitializerParameter* temp = init_w_two_;
  init_w_two_ = NULL;
  return temp;
}
 void RNNStructParameter::set_allocated_init_w_two(::DeepLearning::NeuralNetInitializerParameter* init_w_two) {
  delete init_w_two_;
  init_w_two_ = init_w_two;
  if (init_w_two) {
    set_has_init_w_two();
  } else {
    clear_has_init_w_two();
  }
  // @@protoc_insertion_point(field_set_allocated:DeepLearning.RNNStructParameter.init_W_two)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* NeuralNetInitializerParameter_InitializerType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NeuralNetInitializerParameter_InitializerType_descriptor_;
}
bool NeuralNetInitializerParameter_InitializerType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::custom;
const NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::identity;
const NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::zero;
const NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::normal;
const NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::glorot_normal;
const NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::IRNN;
const NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::orthogonal;
const NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::InitializerType_MIN;
const NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::InitializerType_MAX;
const int NeuralNetInitializerParameter::InitializerType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int NeuralNetInitializerParameter::kNormalStdFieldNumber;
const int NeuralNetInitializerParameter::kNormalMeanFieldNumber;
const int NeuralNetInitializerParameter::kInitializerTypeFieldNumber;
#endif  // !_MSC_VER

NeuralNetInitializerParameter::NeuralNetInitializerParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeepLearning.NeuralNetInitializerParameter)
}

void NeuralNetInitializerParameter::InitAsDefaultInstance() {
}

NeuralNetInitializerParameter::NeuralNetInitializerParameter(const NeuralNetInitializerParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeepLearning.NeuralNetInitializerParameter)
}

void NeuralNetInitializerParameter::SharedCtor() {
  _cached_size_ = 0;
  normal_std_ = 0;
  normal_mean_ = 0;
  initializertype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NeuralNetInitializerParameter::~NeuralNetInitializerParameter() {
  // @@protoc_insertion_point(destructor:DeepLearning.NeuralNetInitializerParameter)
  SharedDtor();
}

void NeuralNetInitializerParameter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NeuralNetInitializerParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NeuralNetInitializerParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NeuralNetInitializerParameter_descriptor_;
}

const NeuralNetInitializerParameter& NeuralNetInitializerParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeepLearning_2eproto();
  return *default_instance_;
}

NeuralNetInitializerParameter* NeuralNetInitializerParameter::default_instance_ = NULL;

NeuralNetInitializerParameter* NeuralNetInitializerParameter::New(::google::protobuf::Arena* arena) const {
  NeuralNetInitializerParameter* n = new NeuralNetInitializerParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NeuralNetInitializerParameter::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NeuralNetInitializerParameter*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(normal_std_, normal_mean_);
    initializertype_ = 1;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NeuralNetInitializerParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeepLearning.NeuralNetInitializerParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double normal_std = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &normal_std_)));
          set_has_normal_std();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_normal_mean;
        break;
      }

      // optional double normal_mean = 2;
      case 2: {
        if (tag == 17) {
         parse_normal_mean:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &normal_mean_)));
          set_has_normal_mean();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_initializerType;
        break;
      }

      // optional .DeepLearning.NeuralNetInitializerParameter.InitializerType initializerType = 3;
      case 3: {
        if (tag == 24) {
         parse_initializerType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DeepLearning::NeuralNetInitializerParameter_InitializerType_IsValid(value)) {
            set_initializertype(static_cast< ::DeepLearning::NeuralNetInitializerParameter_InitializerType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeepLearning.NeuralNetInitializerParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeepLearning.NeuralNetInitializerParameter)
  return false;
#undef DO_
}

void NeuralNetInitializerParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeepLearning.NeuralNetInitializerParameter)
  // optional double normal_std = 1;
  if (has_normal_std()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->normal_std(), output);
  }

  // optional double normal_mean = 2;
  if (has_normal_mean()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->normal_mean(), output);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter.InitializerType initializerType = 3;
  if (has_initializertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->initializertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeepLearning.NeuralNetInitializerParameter)
}

::google::protobuf::uint8* NeuralNetInitializerParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeepLearning.NeuralNetInitializerParameter)
  // optional double normal_std = 1;
  if (has_normal_std()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->normal_std(), target);
  }

  // optional double normal_mean = 2;
  if (has_normal_mean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->normal_mean(), target);
  }

  // optional .DeepLearning.NeuralNetInitializerParameter.InitializerType initializerType = 3;
  if (has_initializertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->initializertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeepLearning.NeuralNetInitializerParameter)
  return target;
}

int NeuralNetInitializerParameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7) {
    // optional double normal_std = 1;
    if (has_normal_std()) {
      total_size += 1 + 8;
    }

    // optional double normal_mean = 2;
    if (has_normal_mean()) {
      total_size += 1 + 8;
    }

    // optional .DeepLearning.NeuralNetInitializerParameter.InitializerType initializerType = 3;
    if (has_initializertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->initializertype());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NeuralNetInitializerParameter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NeuralNetInitializerParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NeuralNetInitializerParameter>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NeuralNetInitializerParameter::MergeFrom(const NeuralNetInitializerParameter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_normal_std()) {
      set_normal_std(from.normal_std());
    }
    if (from.has_normal_mean()) {
      set_normal_mean(from.normal_mean());
    }
    if (from.has_initializertype()) {
      set_initializertype(from.initializertype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NeuralNetInitializerParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NeuralNetInitializerParameter::CopyFrom(const NeuralNetInitializerParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NeuralNetInitializerParameter::IsInitialized() const {

  return true;
}

void NeuralNetInitializerParameter::Swap(NeuralNetInitializerParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NeuralNetInitializerParameter::InternalSwap(NeuralNetInitializerParameter* other) {
  std::swap(normal_std_, other->normal_std_);
  std::swap(normal_mean_, other->normal_mean_);
  std::swap(initializertype_, other->initializertype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NeuralNetInitializerParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NeuralNetInitializerParameter_descriptor_;
  metadata.reflection = NeuralNetInitializerParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NeuralNetInitializerParameter

// optional double normal_std = 1;
bool NeuralNetInitializerParameter::has_normal_std() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NeuralNetInitializerParameter::set_has_normal_std() {
  _has_bits_[0] |= 0x00000001u;
}
void NeuralNetInitializerParameter::clear_has_normal_std() {
  _has_bits_[0] &= ~0x00000001u;
}
void NeuralNetInitializerParameter::clear_normal_std() {
  normal_std_ = 0;
  clear_has_normal_std();
}
 double NeuralNetInitializerParameter::normal_std() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetInitializerParameter.normal_std)
  return normal_std_;
}
 void NeuralNetInitializerParameter::set_normal_std(double value) {
  set_has_normal_std();
  normal_std_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetInitializerParameter.normal_std)
}

// optional double normal_mean = 2;
bool NeuralNetInitializerParameter::has_normal_mean() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NeuralNetInitializerParameter::set_has_normal_mean() {
  _has_bits_[0] |= 0x00000002u;
}
void NeuralNetInitializerParameter::clear_has_normal_mean() {
  _has_bits_[0] &= ~0x00000002u;
}
void NeuralNetInitializerParameter::clear_normal_mean() {
  normal_mean_ = 0;
  clear_has_normal_mean();
}
 double NeuralNetInitializerParameter::normal_mean() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetInitializerParameter.normal_mean)
  return normal_mean_;
}
 void NeuralNetInitializerParameter::set_normal_mean(double value) {
  set_has_normal_mean();
  normal_mean_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetInitializerParameter.normal_mean)
}

// optional .DeepLearning.NeuralNetInitializerParameter.InitializerType initializerType = 3;
bool NeuralNetInitializerParameter::has_initializertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NeuralNetInitializerParameter::set_has_initializertype() {
  _has_bits_[0] |= 0x00000004u;
}
void NeuralNetInitializerParameter::clear_has_initializertype() {
  _has_bits_[0] &= ~0x00000004u;
}
void NeuralNetInitializerParameter::clear_initializertype() {
  initializertype_ = 1;
  clear_has_initializertype();
}
 ::DeepLearning::NeuralNetInitializerParameter_InitializerType NeuralNetInitializerParameter::initializertype() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetInitializerParameter.initializerType)
  return static_cast< ::DeepLearning::NeuralNetInitializerParameter_InitializerType >(initializertype_);
}
 void NeuralNetInitializerParameter::set_initializertype(::DeepLearning::NeuralNetInitializerParameter_InitializerType value) {
  assert(::DeepLearning::NeuralNetInitializerParameter_InitializerType_IsValid(value));
  set_has_initializertype();
  initializertype_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetInitializerParameter.initializerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* NeuralNetTrainingParameter_TrainerType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NeuralNetTrainingParameter_TrainerType_descriptor_;
}
bool NeuralNetTrainingParameter_TrainerType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const NeuralNetTrainingParameter_TrainerType NeuralNetTrainingParameter::SGD;
const NeuralNetTrainingParameter_TrainerType NeuralNetTrainingParameter::RMSProp;
const NeuralNetTrainingParameter_TrainerType NeuralNetTrainingParameter::SGDRNN;
const NeuralNetTrainingParameter_TrainerType NeuralNetTrainingParameter::TrainerType_MIN;
const NeuralNetTrainingParameter_TrainerType NeuralNetTrainingParameter::TrainerType_MAX;
const int NeuralNetTrainingParameter::TrainerType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int NeuralNetTrainingParameter::kLearningRateFieldNumber;
const int NeuralNetTrainingParameter::kMaxIterFieldNumber;
const int NeuralNetTrainingParameter::kMiniBatchSizeFieldNumber;
const int NeuralNetTrainingParameter::kNEpochFieldNumber;
const int NeuralNetTrainingParameter::kEpiFieldNumber;
const int NeuralNetTrainingParameter::kTrainerTypeFieldNumber;
const int NeuralNetTrainingParameter::kDecayRateFieldNumber;
const int NeuralNetTrainingParameter::kMomentumFieldNumber;
const int NeuralNetTrainingParameter::kVerboseFieldNumber;
const int NeuralNetTrainingParameter::kPrintInfoFrequencyFieldNumber;
const int NeuralNetTrainingParameter::kClipFlagFieldNumber;
const int NeuralNetTrainingParameter::kClipThresholdFieldNumber;
const int NeuralNetTrainingParameter::kRMSPropRhoFieldNumber;
#endif  // !_MSC_VER

NeuralNetTrainingParameter::NeuralNetTrainingParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeepLearning.NeuralNetTrainingParameter)
}

void NeuralNetTrainingParameter::InitAsDefaultInstance() {
}

NeuralNetTrainingParameter::NeuralNetTrainingParameter(const NeuralNetTrainingParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeepLearning.NeuralNetTrainingParameter)
}

void NeuralNetTrainingParameter::SharedCtor() {
  _cached_size_ = 0;
  learningrate_ = 0;
  maxiter_ = 0;
  minibatchsize_ = 0;
  nepoch_ = 0;
  epi_ = 1e-06;
  trainertype_ = 1;
  decayrate_ = 10;
  momentum_ = 0.9;
  verbose_ = true;
  printinfofrequency_ = 1;
  clipflag_ = false;
  clipthreshold_ = 1;
  rmsprop_rho_ = 0.9;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NeuralNetTrainingParameter::~NeuralNetTrainingParameter() {
  // @@protoc_insertion_point(destructor:DeepLearning.NeuralNetTrainingParameter)
  SharedDtor();
}

void NeuralNetTrainingParameter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NeuralNetTrainingParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NeuralNetTrainingParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NeuralNetTrainingParameter_descriptor_;
}

const NeuralNetTrainingParameter& NeuralNetTrainingParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeepLearning_2eproto();
  return *default_instance_;
}

NeuralNetTrainingParameter* NeuralNetTrainingParameter::default_instance_ = NULL;

NeuralNetTrainingParameter* NeuralNetTrainingParameter::New(::google::protobuf::Arena* arena) const {
  NeuralNetTrainingParameter* n = new NeuralNetTrainingParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NeuralNetTrainingParameter::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NeuralNetTrainingParameter*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(learningrate_, minibatchsize_);
    nepoch_ = 0;
    epi_ = 1e-06;
    trainertype_ = 1;
    decayrate_ = 10;
    momentum_ = 0.9;
  }
  if (_has_bits_[8 / 32] & 7936u) {
    verbose_ = true;
    printinfofrequency_ = 1;
    clipflag_ = false;
    clipthreshold_ = 1;
    rmsprop_rho_ = 0.9;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NeuralNetTrainingParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeepLearning.NeuralNetTrainingParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double learningRate = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &learningrate_)));
          set_has_learningrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_maxIter;
        break;
      }

      // optional int32 maxIter = 2;
      case 2: {
        if (tag == 16) {
         parse_maxIter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxiter_)));
          set_has_maxiter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_miniBatchSize;
        break;
      }

      // optional int32 miniBatchSize = 3;
      case 3: {
        if (tag == 24) {
         parse_miniBatchSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minibatchsize_)));
          set_has_minibatchsize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_NEpoch;
        break;
      }

      // optional int32 NEpoch = 4;
      case 4: {
        if (tag == 32) {
         parse_NEpoch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nepoch_)));
          set_has_nepoch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_epi;
        break;
      }

      // optional double epi = 5 [default = 1e-06];
      case 5: {
        if (tag == 41) {
         parse_epi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &epi_)));
          set_has_epi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_trainerType;
        break;
      }

      // optional .DeepLearning.NeuralNetTrainingParameter.TrainerType trainerType = 6 [default = SGD];
      case 6: {
        if (tag == 48) {
         parse_trainerType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DeepLearning::NeuralNetTrainingParameter_TrainerType_IsValid(value)) {
            set_trainertype(static_cast< ::DeepLearning::NeuralNetTrainingParameter_TrainerType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_decayRate;
        break;
      }

      // optional double decayRate = 7 [default = 10];
      case 7: {
        if (tag == 57) {
         parse_decayRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &decayrate_)));
          set_has_decayrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_momentum;
        break;
      }

      // optional double momentum = 8 [default = 0.9];
      case 8: {
        if (tag == 65) {
         parse_momentum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &momentum_)));
          set_has_momentum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_verbose;
        break;
      }

      // optional bool verbose = 9 [default = true];
      case 9: {
        if (tag == 72) {
         parse_verbose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &verbose_)));
          set_has_verbose();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_printInfoFrequency;
        break;
      }

      // optional int32 printInfoFrequency = 10 [default = 1];
      case 10: {
        if (tag == 80) {
         parse_printInfoFrequency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &printinfofrequency_)));
          set_has_printinfofrequency();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_clipFlag;
        break;
      }

      // optional bool clipFlag = 11 [default = false];
      case 11: {
        if (tag == 88) {
         parse_clipFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clipflag_)));
          set_has_clipflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_clipThreshold;
        break;
      }

      // optional double clipThreshold = 12 [default = 1];
      case 12: {
        if (tag == 97) {
         parse_clipThreshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &clipthreshold_)));
          set_has_clipthreshold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_RMSProp_rho;
        break;
      }

      // optional double RMSProp_rho = 13 [default = 0.9];
      case 13: {
        if (tag == 105) {
         parse_RMSProp_rho:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rmsprop_rho_)));
          set_has_rmsprop_rho();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeepLearning.NeuralNetTrainingParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeepLearning.NeuralNetTrainingParameter)
  return false;
#undef DO_
}

void NeuralNetTrainingParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeepLearning.NeuralNetTrainingParameter)
  // optional double learningRate = 1;
  if (has_learningrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->learningrate(), output);
  }

  // optional int32 maxIter = 2;
  if (has_maxiter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maxiter(), output);
  }

  // optional int32 miniBatchSize = 3;
  if (has_minibatchsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->minibatchsize(), output);
  }

  // optional int32 NEpoch = 4;
  if (has_nepoch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nepoch(), output);
  }

  // optional double epi = 5 [default = 1e-06];
  if (has_epi()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->epi(), output);
  }

  // optional .DeepLearning.NeuralNetTrainingParameter.TrainerType trainerType = 6 [default = SGD];
  if (has_trainertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->trainertype(), output);
  }

  // optional double decayRate = 7 [default = 10];
  if (has_decayrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->decayrate(), output);
  }

  // optional double momentum = 8 [default = 0.9];
  if (has_momentum()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->momentum(), output);
  }

  // optional bool verbose = 9 [default = true];
  if (has_verbose()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->verbose(), output);
  }

  // optional int32 printInfoFrequency = 10 [default = 1];
  if (has_printinfofrequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->printinfofrequency(), output);
  }

  // optional bool clipFlag = 11 [default = false];
  if (has_clipflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->clipflag(), output);
  }

  // optional double clipThreshold = 12 [default = 1];
  if (has_clipthreshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->clipthreshold(), output);
  }

  // optional double RMSProp_rho = 13 [default = 0.9];
  if (has_rmsprop_rho()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->rmsprop_rho(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeepLearning.NeuralNetTrainingParameter)
}

::google::protobuf::uint8* NeuralNetTrainingParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeepLearning.NeuralNetTrainingParameter)
  // optional double learningRate = 1;
  if (has_learningrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->learningrate(), target);
  }

  // optional int32 maxIter = 2;
  if (has_maxiter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maxiter(), target);
  }

  // optional int32 miniBatchSize = 3;
  if (has_minibatchsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->minibatchsize(), target);
  }

  // optional int32 NEpoch = 4;
  if (has_nepoch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nepoch(), target);
  }

  // optional double epi = 5 [default = 1e-06];
  if (has_epi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->epi(), target);
  }

  // optional .DeepLearning.NeuralNetTrainingParameter.TrainerType trainerType = 6 [default = SGD];
  if (has_trainertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->trainertype(), target);
  }

  // optional double decayRate = 7 [default = 10];
  if (has_decayrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->decayrate(), target);
  }

  // optional double momentum = 8 [default = 0.9];
  if (has_momentum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->momentum(), target);
  }

  // optional bool verbose = 9 [default = true];
  if (has_verbose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->verbose(), target);
  }

  // optional int32 printInfoFrequency = 10 [default = 1];
  if (has_printinfofrequency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->printinfofrequency(), target);
  }

  // optional bool clipFlag = 11 [default = false];
  if (has_clipflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->clipflag(), target);
  }

  // optional double clipThreshold = 12 [default = 1];
  if (has_clipthreshold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->clipthreshold(), target);
  }

  // optional double RMSProp_rho = 13 [default = 0.9];
  if (has_rmsprop_rho()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->rmsprop_rho(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeepLearning.NeuralNetTrainingParameter)
  return target;
}

int NeuralNetTrainingParameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional double learningRate = 1;
    if (has_learningrate()) {
      total_size += 1 + 8;
    }

    // optional int32 maxIter = 2;
    if (has_maxiter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxiter());
    }

    // optional int32 miniBatchSize = 3;
    if (has_minibatchsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minibatchsize());
    }

    // optional int32 NEpoch = 4;
    if (has_nepoch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nepoch());
    }

    // optional double epi = 5 [default = 1e-06];
    if (has_epi()) {
      total_size += 1 + 8;
    }

    // optional .DeepLearning.NeuralNetTrainingParameter.TrainerType trainerType = 6 [default = SGD];
    if (has_trainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->trainertype());
    }

    // optional double decayRate = 7 [default = 10];
    if (has_decayrate()) {
      total_size += 1 + 8;
    }

    // optional double momentum = 8 [default = 0.9];
    if (has_momentum()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 7936) {
    // optional bool verbose = 9 [default = true];
    if (has_verbose()) {
      total_size += 1 + 1;
    }

    // optional int32 printInfoFrequency = 10 [default = 1];
    if (has_printinfofrequency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->printinfofrequency());
    }

    // optional bool clipFlag = 11 [default = false];
    if (has_clipflag()) {
      total_size += 1 + 1;
    }

    // optional double clipThreshold = 12 [default = 1];
    if (has_clipthreshold()) {
      total_size += 1 + 8;
    }

    // optional double RMSProp_rho = 13 [default = 0.9];
    if (has_rmsprop_rho()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NeuralNetTrainingParameter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NeuralNetTrainingParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NeuralNetTrainingParameter>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NeuralNetTrainingParameter::MergeFrom(const NeuralNetTrainingParameter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_learningrate()) {
      set_learningrate(from.learningrate());
    }
    if (from.has_maxiter()) {
      set_maxiter(from.maxiter());
    }
    if (from.has_minibatchsize()) {
      set_minibatchsize(from.minibatchsize());
    }
    if (from.has_nepoch()) {
      set_nepoch(from.nepoch());
    }
    if (from.has_epi()) {
      set_epi(from.epi());
    }
    if (from.has_trainertype()) {
      set_trainertype(from.trainertype());
    }
    if (from.has_decayrate()) {
      set_decayrate(from.decayrate());
    }
    if (from.has_momentum()) {
      set_momentum(from.momentum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_verbose()) {
      set_verbose(from.verbose());
    }
    if (from.has_printinfofrequency()) {
      set_printinfofrequency(from.printinfofrequency());
    }
    if (from.has_clipflag()) {
      set_clipflag(from.clipflag());
    }
    if (from.has_clipthreshold()) {
      set_clipthreshold(from.clipthreshold());
    }
    if (from.has_rmsprop_rho()) {
      set_rmsprop_rho(from.rmsprop_rho());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NeuralNetTrainingParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NeuralNetTrainingParameter::CopyFrom(const NeuralNetTrainingParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NeuralNetTrainingParameter::IsInitialized() const {

  return true;
}

void NeuralNetTrainingParameter::Swap(NeuralNetTrainingParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NeuralNetTrainingParameter::InternalSwap(NeuralNetTrainingParameter* other) {
  std::swap(learningrate_, other->learningrate_);
  std::swap(maxiter_, other->maxiter_);
  std::swap(minibatchsize_, other->minibatchsize_);
  std::swap(nepoch_, other->nepoch_);
  std::swap(epi_, other->epi_);
  std::swap(trainertype_, other->trainertype_);
  std::swap(decayrate_, other->decayrate_);
  std::swap(momentum_, other->momentum_);
  std::swap(verbose_, other->verbose_);
  std::swap(printinfofrequency_, other->printinfofrequency_);
  std::swap(clipflag_, other->clipflag_);
  std::swap(clipthreshold_, other->clipthreshold_);
  std::swap(rmsprop_rho_, other->rmsprop_rho_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NeuralNetTrainingParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NeuralNetTrainingParameter_descriptor_;
  metadata.reflection = NeuralNetTrainingParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NeuralNetTrainingParameter

// optional double learningRate = 1;
bool NeuralNetTrainingParameter::has_learningrate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NeuralNetTrainingParameter::set_has_learningrate() {
  _has_bits_[0] |= 0x00000001u;
}
void NeuralNetTrainingParameter::clear_has_learningrate() {
  _has_bits_[0] &= ~0x00000001u;
}
void NeuralNetTrainingParameter::clear_learningrate() {
  learningrate_ = 0;
  clear_has_learningrate();
}
 double NeuralNetTrainingParameter::learningrate() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.learningRate)
  return learningrate_;
}
 void NeuralNetTrainingParameter::set_learningrate(double value) {
  set_has_learningrate();
  learningrate_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.learningRate)
}

// optional int32 maxIter = 2;
bool NeuralNetTrainingParameter::has_maxiter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NeuralNetTrainingParameter::set_has_maxiter() {
  _has_bits_[0] |= 0x00000002u;
}
void NeuralNetTrainingParameter::clear_has_maxiter() {
  _has_bits_[0] &= ~0x00000002u;
}
void NeuralNetTrainingParameter::clear_maxiter() {
  maxiter_ = 0;
  clear_has_maxiter();
}
 ::google::protobuf::int32 NeuralNetTrainingParameter::maxiter() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.maxIter)
  return maxiter_;
}
 void NeuralNetTrainingParameter::set_maxiter(::google::protobuf::int32 value) {
  set_has_maxiter();
  maxiter_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.maxIter)
}

// optional int32 miniBatchSize = 3;
bool NeuralNetTrainingParameter::has_minibatchsize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NeuralNetTrainingParameter::set_has_minibatchsize() {
  _has_bits_[0] |= 0x00000004u;
}
void NeuralNetTrainingParameter::clear_has_minibatchsize() {
  _has_bits_[0] &= ~0x00000004u;
}
void NeuralNetTrainingParameter::clear_minibatchsize() {
  minibatchsize_ = 0;
  clear_has_minibatchsize();
}
 ::google::protobuf::int32 NeuralNetTrainingParameter::minibatchsize() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.miniBatchSize)
  return minibatchsize_;
}
 void NeuralNetTrainingParameter::set_minibatchsize(::google::protobuf::int32 value) {
  set_has_minibatchsize();
  minibatchsize_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.miniBatchSize)
}

// optional int32 NEpoch = 4;
bool NeuralNetTrainingParameter::has_nepoch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NeuralNetTrainingParameter::set_has_nepoch() {
  _has_bits_[0] |= 0x00000008u;
}
void NeuralNetTrainingParameter::clear_has_nepoch() {
  _has_bits_[0] &= ~0x00000008u;
}
void NeuralNetTrainingParameter::clear_nepoch() {
  nepoch_ = 0;
  clear_has_nepoch();
}
 ::google::protobuf::int32 NeuralNetTrainingParameter::nepoch() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.NEpoch)
  return nepoch_;
}
 void NeuralNetTrainingParameter::set_nepoch(::google::protobuf::int32 value) {
  set_has_nepoch();
  nepoch_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.NEpoch)
}

// optional double epi = 5 [default = 1e-06];
bool NeuralNetTrainingParameter::has_epi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NeuralNetTrainingParameter::set_has_epi() {
  _has_bits_[0] |= 0x00000010u;
}
void NeuralNetTrainingParameter::clear_has_epi() {
  _has_bits_[0] &= ~0x00000010u;
}
void NeuralNetTrainingParameter::clear_epi() {
  epi_ = 1e-06;
  clear_has_epi();
}
 double NeuralNetTrainingParameter::epi() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.epi)
  return epi_;
}
 void NeuralNetTrainingParameter::set_epi(double value) {
  set_has_epi();
  epi_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.epi)
}

// optional .DeepLearning.NeuralNetTrainingParameter.TrainerType trainerType = 6 [default = SGD];
bool NeuralNetTrainingParameter::has_trainertype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void NeuralNetTrainingParameter::set_has_trainertype() {
  _has_bits_[0] |= 0x00000020u;
}
void NeuralNetTrainingParameter::clear_has_trainertype() {
  _has_bits_[0] &= ~0x00000020u;
}
void NeuralNetTrainingParameter::clear_trainertype() {
  trainertype_ = 1;
  clear_has_trainertype();
}
 ::DeepLearning::NeuralNetTrainingParameter_TrainerType NeuralNetTrainingParameter::trainertype() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.trainerType)
  return static_cast< ::DeepLearning::NeuralNetTrainingParameter_TrainerType >(trainertype_);
}
 void NeuralNetTrainingParameter::set_trainertype(::DeepLearning::NeuralNetTrainingParameter_TrainerType value) {
  assert(::DeepLearning::NeuralNetTrainingParameter_TrainerType_IsValid(value));
  set_has_trainertype();
  trainertype_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.trainerType)
}

// optional double decayRate = 7 [default = 10];
bool NeuralNetTrainingParameter::has_decayrate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void NeuralNetTrainingParameter::set_has_decayrate() {
  _has_bits_[0] |= 0x00000040u;
}
void NeuralNetTrainingParameter::clear_has_decayrate() {
  _has_bits_[0] &= ~0x00000040u;
}
void NeuralNetTrainingParameter::clear_decayrate() {
  decayrate_ = 10;
  clear_has_decayrate();
}
 double NeuralNetTrainingParameter::decayrate() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.decayRate)
  return decayrate_;
}
 void NeuralNetTrainingParameter::set_decayrate(double value) {
  set_has_decayrate();
  decayrate_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.decayRate)
}

// optional double momentum = 8 [default = 0.9];
bool NeuralNetTrainingParameter::has_momentum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void NeuralNetTrainingParameter::set_has_momentum() {
  _has_bits_[0] |= 0x00000080u;
}
void NeuralNetTrainingParameter::clear_has_momentum() {
  _has_bits_[0] &= ~0x00000080u;
}
void NeuralNetTrainingParameter::clear_momentum() {
  momentum_ = 0.9;
  clear_has_momentum();
}
 double NeuralNetTrainingParameter::momentum() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.momentum)
  return momentum_;
}
 void NeuralNetTrainingParameter::set_momentum(double value) {
  set_has_momentum();
  momentum_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.momentum)
}

// optional bool verbose = 9 [default = true];
bool NeuralNetTrainingParameter::has_verbose() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void NeuralNetTrainingParameter::set_has_verbose() {
  _has_bits_[0] |= 0x00000100u;
}
void NeuralNetTrainingParameter::clear_has_verbose() {
  _has_bits_[0] &= ~0x00000100u;
}
void NeuralNetTrainingParameter::clear_verbose() {
  verbose_ = true;
  clear_has_verbose();
}
 bool NeuralNetTrainingParameter::verbose() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.verbose)
  return verbose_;
}
 void NeuralNetTrainingParameter::set_verbose(bool value) {
  set_has_verbose();
  verbose_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.verbose)
}

// optional int32 printInfoFrequency = 10 [default = 1];
bool NeuralNetTrainingParameter::has_printinfofrequency() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void NeuralNetTrainingParameter::set_has_printinfofrequency() {
  _has_bits_[0] |= 0x00000200u;
}
void NeuralNetTrainingParameter::clear_has_printinfofrequency() {
  _has_bits_[0] &= ~0x00000200u;
}
void NeuralNetTrainingParameter::clear_printinfofrequency() {
  printinfofrequency_ = 1;
  clear_has_printinfofrequency();
}
 ::google::protobuf::int32 NeuralNetTrainingParameter::printinfofrequency() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.printInfoFrequency)
  return printinfofrequency_;
}
 void NeuralNetTrainingParameter::set_printinfofrequency(::google::protobuf::int32 value) {
  set_has_printinfofrequency();
  printinfofrequency_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.printInfoFrequency)
}

// optional bool clipFlag = 11 [default = false];
bool NeuralNetTrainingParameter::has_clipflag() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void NeuralNetTrainingParameter::set_has_clipflag() {
  _has_bits_[0] |= 0x00000400u;
}
void NeuralNetTrainingParameter::clear_has_clipflag() {
  _has_bits_[0] &= ~0x00000400u;
}
void NeuralNetTrainingParameter::clear_clipflag() {
  clipflag_ = false;
  clear_has_clipflag();
}
 bool NeuralNetTrainingParameter::clipflag() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.clipFlag)
  return clipflag_;
}
 void NeuralNetTrainingParameter::set_clipflag(bool value) {
  set_has_clipflag();
  clipflag_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.clipFlag)
}

// optional double clipThreshold = 12 [default = 1];
bool NeuralNetTrainingParameter::has_clipthreshold() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void NeuralNetTrainingParameter::set_has_clipthreshold() {
  _has_bits_[0] |= 0x00000800u;
}
void NeuralNetTrainingParameter::clear_has_clipthreshold() {
  _has_bits_[0] &= ~0x00000800u;
}
void NeuralNetTrainingParameter::clear_clipthreshold() {
  clipthreshold_ = 1;
  clear_has_clipthreshold();
}
 double NeuralNetTrainingParameter::clipthreshold() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.clipThreshold)
  return clipthreshold_;
}
 void NeuralNetTrainingParameter::set_clipthreshold(double value) {
  set_has_clipthreshold();
  clipthreshold_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.clipThreshold)
}

// optional double RMSProp_rho = 13 [default = 0.9];
bool NeuralNetTrainingParameter::has_rmsprop_rho() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void NeuralNetTrainingParameter::set_has_rmsprop_rho() {
  _has_bits_[0] |= 0x00001000u;
}
void NeuralNetTrainingParameter::clear_has_rmsprop_rho() {
  _has_bits_[0] &= ~0x00001000u;
}
void NeuralNetTrainingParameter::clear_rmsprop_rho() {
  rmsprop_rho_ = 0.9;
  clear_has_rmsprop_rho();
}
 double NeuralNetTrainingParameter::rmsprop_rho() const {
  // @@protoc_insertion_point(field_get:DeepLearning.NeuralNetTrainingParameter.RMSProp_rho)
  return rmsprop_rho_;
}
 void NeuralNetTrainingParameter::set_rmsprop_rho(double value) {
  set_has_rmsprop_rho();
  rmsprop_rho_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.NeuralNetTrainingParameter.RMSProp_rho)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QLearningSolverParameter::kNumTrainingEpisodesFieldNumber;
const int QLearningSolverParameter::kLearningRateFieldNumber;
const int QLearningSolverParameter::kEpsilonFieldNumber;
const int QLearningSolverParameter::kEpisodeLengthFieldNumber;
const int QLearningSolverParameter::kDiscountFieldNumber;
const int QLearningSolverParameter::kNumEpisodesBeforeTrainingFieldNumber;
#endif  // !_MSC_VER

QLearningSolverParameter::QLearningSolverParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeepLearning.QLearningSolverParameter)
}

void QLearningSolverParameter::InitAsDefaultInstance() {
}

QLearningSolverParameter::QLearningSolverParameter(const QLearningSolverParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeepLearning.QLearningSolverParameter)
}

void QLearningSolverParameter::SharedCtor() {
  _cached_size_ = 0;
  numtrainingepisodes_ = 0;
  learningrate_ = 0;
  epsilon_ = 0;
  episodelength_ = 0;
  discount_ = 0;
  numepisodesbeforetraining_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QLearningSolverParameter::~QLearningSolverParameter() {
  // @@protoc_insertion_point(destructor:DeepLearning.QLearningSolverParameter)
  SharedDtor();
}

void QLearningSolverParameter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QLearningSolverParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QLearningSolverParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QLearningSolverParameter_descriptor_;
}

const QLearningSolverParameter& QLearningSolverParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeepLearning_2eproto();
  return *default_instance_;
}

QLearningSolverParameter* QLearningSolverParameter::default_instance_ = NULL;

QLearningSolverParameter* QLearningSolverParameter::New(::google::protobuf::Arena* arena) const {
  QLearningSolverParameter* n = new QLearningSolverParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QLearningSolverParameter::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QLearningSolverParameter*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(learningrate_, numepisodesbeforetraining_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QLearningSolverParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeepLearning.QLearningSolverParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 numTrainingEpisodes = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numtrainingepisodes_)));
          set_has_numtrainingepisodes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_learningRate;
        break;
      }

      // optional double learningRate = 2;
      case 2: {
        if (tag == 17) {
         parse_learningRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &learningrate_)));
          set_has_learningrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_epsilon;
        break;
      }

      // optional double epsilon = 3;
      case 3: {
        if (tag == 25) {
         parse_epsilon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &epsilon_)));
          set_has_epsilon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EpisodeLength;
        break;
      }

      // optional int32 EpisodeLength = 4;
      case 4: {
        if (tag == 32) {
         parse_EpisodeLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &episodelength_)));
          set_has_episodelength();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_discount;
        break;
      }

      // optional double discount = 5;
      case 5: {
        if (tag == 41) {
         parse_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &discount_)));
          set_has_discount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_numEpisodesBeforeTraining;
        break;
      }

      // optional int32 numEpisodesBeforeTraining = 6;
      case 6: {
        if (tag == 48) {
         parse_numEpisodesBeforeTraining:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numepisodesbeforetraining_)));
          set_has_numepisodesbeforetraining();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeepLearning.QLearningSolverParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeepLearning.QLearningSolverParameter)
  return false;
#undef DO_
}

void QLearningSolverParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeepLearning.QLearningSolverParameter)
  // optional int32 numTrainingEpisodes = 1;
  if (has_numtrainingepisodes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numtrainingepisodes(), output);
  }

  // optional double learningRate = 2;
  if (has_learningrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->learningrate(), output);
  }

  // optional double epsilon = 3;
  if (has_epsilon()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->epsilon(), output);
  }

  // optional int32 EpisodeLength = 4;
  if (has_episodelength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->episodelength(), output);
  }

  // optional double discount = 5;
  if (has_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->discount(), output);
  }

  // optional int32 numEpisodesBeforeTraining = 6;
  if (has_numepisodesbeforetraining()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->numepisodesbeforetraining(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeepLearning.QLearningSolverParameter)
}

::google::protobuf::uint8* QLearningSolverParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeepLearning.QLearningSolverParameter)
  // optional int32 numTrainingEpisodes = 1;
  if (has_numtrainingepisodes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->numtrainingepisodes(), target);
  }

  // optional double learningRate = 2;
  if (has_learningrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->learningrate(), target);
  }

  // optional double epsilon = 3;
  if (has_epsilon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->epsilon(), target);
  }

  // optional int32 EpisodeLength = 4;
  if (has_episodelength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->episodelength(), target);
  }

  // optional double discount = 5;
  if (has_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->discount(), target);
  }

  // optional int32 numEpisodesBeforeTraining = 6;
  if (has_numepisodesbeforetraining()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->numepisodesbeforetraining(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeepLearning.QLearningSolverParameter)
  return target;
}

int QLearningSolverParameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63) {
    // optional int32 numTrainingEpisodes = 1;
    if (has_numtrainingepisodes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numtrainingepisodes());
    }

    // optional double learningRate = 2;
    if (has_learningrate()) {
      total_size += 1 + 8;
    }

    // optional double epsilon = 3;
    if (has_epsilon()) {
      total_size += 1 + 8;
    }

    // optional int32 EpisodeLength = 4;
    if (has_episodelength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->episodelength());
    }

    // optional double discount = 5;
    if (has_discount()) {
      total_size += 1 + 8;
    }

    // optional int32 numEpisodesBeforeTraining = 6;
    if (has_numepisodesbeforetraining()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numepisodesbeforetraining());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QLearningSolverParameter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QLearningSolverParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QLearningSolverParameter>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QLearningSolverParameter::MergeFrom(const QLearningSolverParameter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numtrainingepisodes()) {
      set_numtrainingepisodes(from.numtrainingepisodes());
    }
    if (from.has_learningrate()) {
      set_learningrate(from.learningrate());
    }
    if (from.has_epsilon()) {
      set_epsilon(from.epsilon());
    }
    if (from.has_episodelength()) {
      set_episodelength(from.episodelength());
    }
    if (from.has_discount()) {
      set_discount(from.discount());
    }
    if (from.has_numepisodesbeforetraining()) {
      set_numepisodesbeforetraining(from.numepisodesbeforetraining());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QLearningSolverParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QLearningSolverParameter::CopyFrom(const QLearningSolverParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QLearningSolverParameter::IsInitialized() const {

  return true;
}

void QLearningSolverParameter::Swap(QLearningSolverParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QLearningSolverParameter::InternalSwap(QLearningSolverParameter* other) {
  std::swap(numtrainingepisodes_, other->numtrainingepisodes_);
  std::swap(learningrate_, other->learningrate_);
  std::swap(epsilon_, other->epsilon_);
  std::swap(episodelength_, other->episodelength_);
  std::swap(discount_, other->discount_);
  std::swap(numepisodesbeforetraining_, other->numepisodesbeforetraining_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QLearningSolverParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QLearningSolverParameter_descriptor_;
  metadata.reflection = QLearningSolverParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QLearningSolverParameter

// optional int32 numTrainingEpisodes = 1;
bool QLearningSolverParameter::has_numtrainingepisodes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QLearningSolverParameter::set_has_numtrainingepisodes() {
  _has_bits_[0] |= 0x00000001u;
}
void QLearningSolverParameter::clear_has_numtrainingepisodes() {
  _has_bits_[0] &= ~0x00000001u;
}
void QLearningSolverParameter::clear_numtrainingepisodes() {
  numtrainingepisodes_ = 0;
  clear_has_numtrainingepisodes();
}
 ::google::protobuf::int32 QLearningSolverParameter::numtrainingepisodes() const {
  // @@protoc_insertion_point(field_get:DeepLearning.QLearningSolverParameter.numTrainingEpisodes)
  return numtrainingepisodes_;
}
 void QLearningSolverParameter::set_numtrainingepisodes(::google::protobuf::int32 value) {
  set_has_numtrainingepisodes();
  numtrainingepisodes_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.QLearningSolverParameter.numTrainingEpisodes)
}

// optional double learningRate = 2;
bool QLearningSolverParameter::has_learningrate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QLearningSolverParameter::set_has_learningrate() {
  _has_bits_[0] |= 0x00000002u;
}
void QLearningSolverParameter::clear_has_learningrate() {
  _has_bits_[0] &= ~0x00000002u;
}
void QLearningSolverParameter::clear_learningrate() {
  learningrate_ = 0;
  clear_has_learningrate();
}
 double QLearningSolverParameter::learningrate() const {
  // @@protoc_insertion_point(field_get:DeepLearning.QLearningSolverParameter.learningRate)
  return learningrate_;
}
 void QLearningSolverParameter::set_learningrate(double value) {
  set_has_learningrate();
  learningrate_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.QLearningSolverParameter.learningRate)
}

// optional double epsilon = 3;
bool QLearningSolverParameter::has_epsilon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QLearningSolverParameter::set_has_epsilon() {
  _has_bits_[0] |= 0x00000004u;
}
void QLearningSolverParameter::clear_has_epsilon() {
  _has_bits_[0] &= ~0x00000004u;
}
void QLearningSolverParameter::clear_epsilon() {
  epsilon_ = 0;
  clear_has_epsilon();
}
 double QLearningSolverParameter::epsilon() const {
  // @@protoc_insertion_point(field_get:DeepLearning.QLearningSolverParameter.epsilon)
  return epsilon_;
}
 void QLearningSolverParameter::set_epsilon(double value) {
  set_has_epsilon();
  epsilon_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.QLearningSolverParameter.epsilon)
}

// optional int32 EpisodeLength = 4;
bool QLearningSolverParameter::has_episodelength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QLearningSolverParameter::set_has_episodelength() {
  _has_bits_[0] |= 0x00000008u;
}
void QLearningSolverParameter::clear_has_episodelength() {
  _has_bits_[0] &= ~0x00000008u;
}
void QLearningSolverParameter::clear_episodelength() {
  episodelength_ = 0;
  clear_has_episodelength();
}
 ::google::protobuf::int32 QLearningSolverParameter::episodelength() const {
  // @@protoc_insertion_point(field_get:DeepLearning.QLearningSolverParameter.EpisodeLength)
  return episodelength_;
}
 void QLearningSolverParameter::set_episodelength(::google::protobuf::int32 value) {
  set_has_episodelength();
  episodelength_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.QLearningSolverParameter.EpisodeLength)
}

// optional double discount = 5;
bool QLearningSolverParameter::has_discount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QLearningSolverParameter::set_has_discount() {
  _has_bits_[0] |= 0x00000010u;
}
void QLearningSolverParameter::clear_has_discount() {
  _has_bits_[0] &= ~0x00000010u;
}
void QLearningSolverParameter::clear_discount() {
  discount_ = 0;
  clear_has_discount();
}
 double QLearningSolverParameter::discount() const {
  // @@protoc_insertion_point(field_get:DeepLearning.QLearningSolverParameter.discount)
  return discount_;
}
 void QLearningSolverParameter::set_discount(double value) {
  set_has_discount();
  discount_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.QLearningSolverParameter.discount)
}

// optional int32 numEpisodesBeforeTraining = 6;
bool QLearningSolverParameter::has_numepisodesbeforetraining() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void QLearningSolverParameter::set_has_numepisodesbeforetraining() {
  _has_bits_[0] |= 0x00000020u;
}
void QLearningSolverParameter::clear_has_numepisodesbeforetraining() {
  _has_bits_[0] &= ~0x00000020u;
}
void QLearningSolverParameter::clear_numepisodesbeforetraining() {
  numepisodesbeforetraining_ = 0;
  clear_has_numepisodesbeforetraining();
}
 ::google::protobuf::int32 QLearningSolverParameter::numepisodesbeforetraining() const {
  // @@protoc_insertion_point(field_get:DeepLearning.QLearningSolverParameter.numEpisodesBeforeTraining)
  return numepisodesbeforetraining_;
}
 void QLearningSolverParameter::set_numepisodesbeforetraining(::google::protobuf::int32 value) {
  set_has_numepisodesbeforetraining();
  numepisodesbeforetraining_ = value;
  // @@protoc_insertion_point(field_set:DeepLearning.QLearningSolverParameter.numEpisodesBeforeTraining)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DeepLearning

// @@protoc_insertion_point(global_scope)
